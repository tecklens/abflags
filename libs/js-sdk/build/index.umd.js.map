{"version":3,"file":"index.umd.js","sources":["../../../node_modules/tiny-emitter/index.js","../src/types/state.ts","../../../node_modules/uuid/dist/esm-browser/rng.js","../../../node_modules/uuid/dist/esm-browser/stringify.js","../../../node_modules/uuid/dist/esm-browser/native.js","../../../node_modules/uuid/dist/esm-browser/v4.js","../src/lib/events-handler.ts","../src/storage/storage-provider-local.ts","../src/storage/storage-provider-inmemory.ts","../src/utils/index.ts","../src/lib/metrics.ts","../src/lib/ab-client.ts"],"sourcesContent":["function E () {\n  // Keep this empty so it's easier to inherit from\n  // (via https://github.com/lipsmack from https://github.com/scottcorgan/tiny-emitter/issues/3)\n}\n\nE.prototype = {\n  on: function (name, callback, ctx) {\n    var e = this.e || (this.e = {});\n\n    (e[name] || (e[name] = [])).push({\n      fn: callback,\n      ctx: ctx\n    });\n\n    return this;\n  },\n\n  once: function (name, callback, ctx) {\n    var self = this;\n    function listener () {\n      self.off(name, listener);\n      callback.apply(ctx, arguments);\n    };\n\n    listener._ = callback\n    return this.on(name, listener, ctx);\n  },\n\n  emit: function (name) {\n    var data = [].slice.call(arguments, 1);\n    var evtArr = ((this.e || (this.e = {}))[name] || []).slice();\n    var i = 0;\n    var len = evtArr.length;\n\n    for (i; i < len; i++) {\n      evtArr[i].fn.apply(evtArr[i].ctx, data);\n    }\n\n    return this;\n  },\n\n  off: function (name, callback) {\n    var e = this.e || (this.e = {});\n    var evts = e[name];\n    var liveEvents = [];\n\n    if (evts && callback) {\n      for (var i = 0, len = evts.length; i < len; i++) {\n        if (evts[i].fn !== callback && evts[i].fn._ !== callback)\n          liveEvents.push(evts[i]);\n      }\n    }\n\n    // Remove event from queue to prevent memory leak\n    // Suggested by https://github.com/lazd\n    // Ref: https://github.com/scottcorgan/tiny-emitter/commit/c6ebfaa9bc973b33d110a84a307742b7cf94c953#commitcomment-5024910\n\n    (liveEvents.length)\n      ? e[name] = liveEvents\n      : delete e[name];\n\n    return this;\n  }\n};\n\nmodule.exports = E;\nmodule.exports.TinyEmitter = E;\n","export type SdkState = 'initializing' | 'error' | 'healthy';\r\n\r\nexport const HEADER_API_KEY = 'api_key'\r\nexport const HEADER_E_TAG = 'api_key'\r\nexport const SESSION_ID = 'session_id'\r\nexport const REFRESH_INTERVAL_INIT = 2000\r\n","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]];\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;","import { v4 as uuidv4 } from 'uuid';\r\nimport {AbContext} from \"../types\";\r\n\r\nclass EventsHandler {\r\n    private generateEventId() {\r\n        return uuidv4();\r\n    }\r\n\r\n    public createImpressionEvent(\r\n        context: AbContext,\r\n        enabled: boolean,\r\n        featureName: string,\r\n        eventType: string,\r\n        impressionData?: boolean,\r\n        variant?: string\r\n    ) {\r\n        const baseEvent = this.createBaseEvent(\r\n            context,\r\n            enabled,\r\n            featureName,\r\n            eventType,\r\n            impressionData\r\n        );\r\n\r\n        if (variant) {\r\n            return {\r\n                ...baseEvent,\r\n                variant,\r\n            };\r\n        }\r\n        return baseEvent;\r\n    }\r\n\r\n    private createBaseEvent(\r\n        context: AbContext,\r\n        enabled: boolean,\r\n        featureName: string,\r\n        eventType: string,\r\n        impressionData?: boolean\r\n    ) {\r\n        return {\r\n            eventType,\r\n            eventId: this.generateEventId(),\r\n            context,\r\n            enabled,\r\n            featureName,\r\n            impressionData,\r\n        };\r\n    }\r\n}\r\n\r\nexport default EventsHandler;\r\n","import {IStorageProvider} from \"./storage-provider\";\r\n\r\nexport class LocalStorageProvider implements IStorageProvider {\r\n  private readonly prefix: string;\r\n\r\n  constructor(name = 'ab:cache') {\r\n    this.prefix = name;\r\n  }\r\n\r\n  public async save(name: string, data: any) {\r\n    const repo = JSON.stringify(data);\r\n    const key = `${this.prefix}:${name}`;\r\n    try {\r\n      window.localStorage.setItem(key, repo);\r\n    } catch (ex) {\r\n      console.error(ex);\r\n    }\r\n  }\r\n\r\n  public get(name: string) {\r\n    try {\r\n      const key = `${this.prefix}:${name}`;\r\n      const data = window.localStorage.getItem(key);\r\n      return data ? JSON.parse(data) : undefined;\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n  }\r\n}\r\n","import {IStorageProvider} from './storage-provider';\r\n\r\nexport class InMemoryStorageProvider implements IStorageProvider {\r\n  private store = new Map();\r\n\r\n  public async save(name: string, data: any) {\r\n    this.store.set(name, data);\r\n  }\r\n\r\n  public async get(name: string) {\r\n    return this.store.get(name);\r\n  }\r\n}\r\n","import {AbContext} from \"../types\";\r\n\r\nexport const EVENTS = {\r\n  INIT: 'initialized',\r\n  ERROR: 'error',\r\n  READY: 'ready',\r\n  UPDATE: 'update',\r\n  IMPRESSION: 'impression',\r\n  SENT: 'sent',\r\n  RECOVERED: 'recovered',\r\n};\r\n\r\nexport const notNullOrUndefined = ([, value]: [string, string]) =>\r\n  value !== undefined && value !== null;\r\n\r\nexport const contextString = (context: AbContext): string => {\r\n\r\n  return JSON.stringify(context);\r\n};\r\n\r\nconst sha256 = async (input: string): Promise<string> => {\r\n  const cryptoSubtle =\r\n    typeof globalThis !== 'undefined' && globalThis.crypto?.subtle\r\n      ? globalThis.crypto?.subtle\r\n      : undefined;\r\n\r\n  if (\r\n    typeof TextEncoder === 'undefined' ||\r\n    !cryptoSubtle?.digest ||\r\n    typeof Uint8Array === 'undefined'\r\n  ) {\r\n    throw new Error('Hashing function not available');\r\n  }\r\n\r\n  const msgUint8 = new TextEncoder().encode(input);\r\n  const hashBuffer = await cryptoSubtle.digest('SHA-256', msgUint8);\r\n  return Array.from(new Uint8Array(hashBuffer))\r\n    .map((x) => x.toString(16).padStart(2, '0'))\r\n    .join('');\r\n};\r\nexport const computeContextHashValue = async (obj: AbContext) => {\r\n  const value = contextString(obj);\r\n\r\n  try {\r\n    return await sha256(value);\r\n  } catch {\r\n    return value;\r\n  }\r\n};\r\n\r\nexport const resolveFetch = () => {\r\n  try {\r\n    if (typeof window !== 'undefined' && 'fetch' in window) {\r\n      return window.fetch.bind(window);\r\n    }\r\n\r\n    if ('fetch' in globalThis) {\r\n      return globalThis.fetch.bind(globalThis);\r\n    }\r\n  } catch (e) {\r\n    console.error('Unleash failed to resolve \"fetch\"', e);\r\n  }\r\n\r\n  return undefined;\r\n};\r\n\r\nexport const resolveAbortController = () => {\r\n  try {\r\n    if (typeof window !== 'undefined' && 'AbortController' in window) {\r\n      return new window.AbortController();\r\n    }\r\n\r\n    if ('fetch' in globalThis) {\r\n      return new globalThis.AbortController();\r\n    }\r\n  } catch (e) {\r\n    console.error('Unleash failed to resolve \"AbortController\" factory', e);\r\n  }\r\n};\r\n","import {notNullOrUndefined} from \"../utils\";\r\nimport {HEADER_API_KEY} from \"../types\";\r\n\r\nexport interface MetricsOptions {\r\n  onError: OnError;\r\n  onSent?: OnSent;\r\n  appName: string;\r\n  metricsInterval?: number;\r\n  disableMetrics?: boolean;\r\n  url: URL | string;\r\n  clientKey: string;\r\n  fetch: any;\r\n  customHeaders?: Record<string, string>;\r\n  metricsIntervalInitial?: number;\r\n}\r\n\r\ninterface Bucket {\r\n  start: Date;\r\n  stop: Date | null;\r\n  features: {\r\n    [s: string]: { yes: number; no: number; };\r\n  };\r\n}\r\n\r\ninterface Payload {\r\n  bucket: Bucket;\r\n  appName: string;\r\n  instanceId: string;\r\n  createdAt: Date;\r\n}\r\n\r\ntype OnError = (error: unknown) => void;\r\ntype OnSent = (payload: Payload) => void;\r\n// eslint-disable-next-line @typescript-eslint/no-empty-function\r\nconst doNothing = () => {};\r\n\r\nexport class Metrics {\r\n  private readonly onError: OnError;\r\n  private readonly onSent: OnSent;\r\n  private bucket: Bucket;\r\n  private readonly appName: string;\r\n  private readonly metricsInterval?: number;\r\n  private readonly disabled: boolean;\r\n  private readonly url: URL;\r\n  private readonly clientKey: string;\r\n  private timer: any;\r\n  private readonly fetch: any;\r\n  private customHeaders: Record<string, string>;\r\n  private readonly metricsIntervalInitial?: number;\r\n\r\n  constructor({\r\n                onError,\r\n                onSent,\r\n                appName,\r\n                metricsInterval,\r\n                disableMetrics = false,\r\n                url,\r\n                clientKey,\r\n                fetch,\r\n                customHeaders = {},\r\n                metricsIntervalInitial,\r\n              }: MetricsOptions) {\r\n    this.onError = onError;\r\n    this.onSent = onSent || doNothing;\r\n    this.disabled = disableMetrics;\r\n    this.metricsInterval = metricsInterval ??  1000;\r\n    this.metricsIntervalInitial = metricsIntervalInitial ?? 1000;\r\n    this.appName = appName;\r\n    this.url = url instanceof URL ? url : new URL(url);\r\n    this.clientKey = clientKey;\r\n    this.bucket = this.createEmptyBucket();\r\n    this.fetch = fetch;\r\n    this.customHeaders = customHeaders;\r\n  }\r\n\r\n  public start() {\r\n    if (this.disabled) {\r\n      return false;\r\n    }\r\n\r\n    if (\r\n      typeof this.metricsInterval === 'number' &&\r\n      this.metricsInterval > 0\r\n    ) {\r\n      if (this.metricsIntervalInitial && this.metricsIntervalInitial > 0) {\r\n        setTimeout(async () => {\r\n          this.startTimer();\r\n          await this.sendMetrics();\r\n        }, this.metricsIntervalInitial);\r\n      } else {\r\n        this.startTimer();\r\n      }\r\n    }\r\n  }\r\n\r\n  public stop() {\r\n    if (this.timer) {\r\n      clearTimeout(this.timer);\r\n      delete this.timer;\r\n    }\r\n  }\r\n\r\n  public createEmptyBucket(): Bucket {\r\n    return {\r\n      start: new Date(),\r\n      stop: null,\r\n      features: {},\r\n    };\r\n  }\r\n\r\n  private getHeaders() {\r\n    const headers: Record<string, string> = {\r\n      [HEADER_API_KEY]: this.clientKey,\r\n      'Accept': 'application/json',\r\n      'Content-Type': 'application/json',\r\n    };\r\n\r\n    Object.entries(this.customHeaders)\r\n      .filter(notNullOrUndefined)\r\n      .forEach(([name, value]) => (headers[name] = value));\r\n\r\n    return headers;\r\n  }\r\n\r\n  public async sendMetrics(): Promise<void> {\r\n    /* istanbul ignore next if */\r\n\r\n    const url = `${this.url}ab/v1/metric`;\r\n    const payload = this.getPayload();\r\n\r\n    if (this.bucketIsEmpty(payload)) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await this.fetch(url, {\r\n        cache: 'no-cache',\r\n        method: 'POST',\r\n        headers: this.getHeaders(),\r\n        body: JSON.stringify(payload),\r\n      });\r\n      this.onSent(payload);\r\n    } catch (e) {\r\n      console.error('AbFlags: unable to send feature metrics', e);\r\n      this.onError(e);\r\n    }\r\n  }\r\n\r\n  public count(name: string, enabled: boolean): boolean {\r\n    if (this.disabled || !this.bucket) {\r\n      return false;\r\n    }\r\n    this.assertBucket(name);\r\n    this.bucket.features[name][enabled ? 'yes' : 'no']++;\r\n    return true;\r\n  }\r\n\r\n  private assertBucket(name: string) {\r\n    if (this.disabled || !this.bucket) {\r\n      return false;\r\n    }\r\n    if (!this.bucket.features[name]) {\r\n      this.bucket.features[name] = {\r\n        yes: 0,\r\n        no: 0,\r\n      };\r\n    }\r\n  }\r\n\r\n  private startTimer(): void {\r\n    this.timer = setInterval(async () => {\r\n      await this.sendMetrics();\r\n    }, this.metricsInterval);\r\n  }\r\n\r\n  private bucketIsEmpty(payload: Payload) {\r\n    return Object.keys(payload.bucket.features).length === 0;\r\n  }\r\n\r\n  private getPayload(): Payload {\r\n    const bucket = { ...this.bucket, stop: new Date() };\r\n    console.debug(`send metric ${bucket}`)\r\n    this.bucket = this.createEmptyBucket();\r\n\r\n    return {\r\n      bucket,\r\n      createdAt: new Date(),\r\n      appName: this.appName,\r\n      instanceId: 'browser',\r\n    };\r\n  }\r\n}\r\n","import {TinyEmitter} from \"tiny-emitter\";\r\nimport {Feature, HEADER_API_KEY, IConfig, LastUpdateTerms, REFRESH_INTERVAL_INIT, SdkState, SESSION_ID} from \"../types\";\r\nimport EventsHandler from \"./events-handler\";\r\nimport {InMemoryStorageProvider, IStorageProvider, LocalStorageProvider} from \"../storage\";\r\nimport {computeContextHashValue, EVENTS, notNullOrUndefined, resolveAbortController, resolveFetch} from \"../utils\";\r\nimport {Metrics} from \"./metrics\";\r\n\r\nexport class AbClient extends TinyEmitter {\r\n  private _config: IConfig;\r\n  private eventsHandler: EventsHandler;\r\n  private readonly url: string;\r\n  private storage: IStorageProvider;\r\n  private state: SdkState;\r\n  private metrics: Metrics;\r\n  private readyEventEmitted = false;\r\n  private readonly storeKey = 'feature';\r\n  private readonly lastUpdateKey = 'last-time';\r\n  private lastRefreshTimestamp: number;\r\n  private features?: Feature[];\r\n  private readonly fetch: any;\r\n  private etag: string = '';\r\n  private abortController?: AbortController | null;\r\n  private lastError: any;\r\n  private fetchedFromServer = false;\r\n  private readonly ready: Promise<void>;\r\n  private started = false;\r\n  private timerRef?: any;\r\n\r\n  constructor(config: IConfig) {\r\n    super();\r\n\r\n    if (!config.clientKey) {\r\n      throw new Error('clientKey is required');\r\n    }\r\n    if (!config.appName) {\r\n      throw new Error('appName is required.');\r\n    }\r\n\r\n    this.eventsHandler = new EventsHandler();\r\n\r\n    this.url = config.url ?? 'https://ab.wolfx.app';\r\n\r\n    // * init storage\r\n    this.storage =\r\n      config.storageProvider ||\r\n      (typeof window !== 'undefined'\r\n        ? new LocalStorageProvider()\r\n        : new InMemoryStorageProvider());\r\n    this.fetch = resolveFetch()\r\n    if (!this.fetch) {\r\n      console.error(\r\n        'You must either provide your own \"fetch\" implementation or run in an environment where \"fetch\" is available.'\r\n      );\r\n    }\r\n\r\n    this._config = config;\r\n    this.ready = new Promise((resolve) => {\r\n      this.init()\r\n        .then(resolve)\r\n        .catch((error) => {\r\n          console.debug(error);\r\n          this.state = 'error';\r\n          this.emit(EVENTS.ERROR, error);\r\n          this.lastError = error;\r\n          resolve();\r\n        });\r\n    });\r\n    this.features = [];\r\n    this.lastRefreshTimestamp = 0;\r\n    this.state = 'initializing';\r\n\r\n    this.metrics = new Metrics({\r\n      onError: this.emit.bind(this, EVENTS.ERROR),\r\n      onSent: this.emit.bind(this, EVENTS.SENT),\r\n      appName: this._config.appName,\r\n      metricsInterval: this._config.metricsInterval,\r\n      disableMetrics: this._config.disableMetrics ?? false,\r\n      url: this.url,\r\n      clientKey: this._config.clientKey,\r\n      fetch: this.fetch,\r\n      customHeaders: this._config.customHeaders,\r\n      metricsIntervalInitial: this._config.metricsIntervalInitial ?? 10,\r\n    });\r\n  }\r\n\r\n  private async init(): Promise<void> {\r\n    this._config.sessionId = await this.resolveSessionId();\r\n\r\n    this.features = (await this.storage.get(this.storeKey)) || [];\r\n    this.lastRefreshTimestamp = await this.getLastRefreshTimestamp();\r\n\r\n    this.state = 'healthy';\r\n    this.emit(EVENTS.INIT);\r\n  }\r\n\r\n  public async start(): Promise<void> {\r\n    this.started = true;\r\n    if (this.timerRef) {\r\n      console.error(\r\n        'SDK has already started, if you want to restart the SDK you should call client.stop() before starting again.'\r\n      );\r\n      return;\r\n    }\r\n    await this.ready;\r\n    this.metrics.start();\r\n    const interval = this._config.refreshInterval && this._config.refreshInterval > 500 ? this._config.refreshInterval : REFRESH_INTERVAL_INIT;\r\n\r\n    await this.initialFetchFeatures();\r\n\r\n    if (interval > 0) {\r\n      this.timerRef = setInterval(() => this.fetchFeatures(), interval);\r\n    }\r\n  }\r\n\r\n  private async getLastRefreshTimestamp(): Promise<number> {\r\n    const lastRefresh: LastUpdateTerms | undefined =\r\n      await this.storage.get(this.lastUpdateKey);\r\n    const contextHash = await computeContextHashValue({\r\n      appName: this._config.appName,\r\n      sessionId: this._config.sessionId,\r\n      currentTime: this._config.currentTime,\r\n      userId: this._config.userId,\r\n      environment: this._config.environment,\r\n      properties: this._config.properties,\r\n    });\r\n    return lastRefresh?.key === contextHash ? lastRefresh.timestamp : 0;\r\n  }\r\n\r\n  private setReady() {\r\n    this.readyEventEmitted = true;\r\n    this.emit(EVENTS.READY);\r\n  }\r\n\r\n  private async storeLastRefreshTimestamp(): Promise<void> {\r\n    this.lastRefreshTimestamp = Date.now();\r\n\r\n    const contextHash = await computeContextHashValue({\r\n      appName: this._config.appName,\r\n      sessionId: this._config.sessionId,\r\n      currentTime: this._config.currentTime,\r\n      userId: this._config.userId,\r\n      environment: this._config.environment,\r\n      properties: this._config.properties,\r\n    });\r\n    const lastUpdateValue: LastUpdateTerms = {\r\n      key: contextHash,\r\n      timestamp: this.lastRefreshTimestamp,\r\n    };\r\n    await this.storage.save(this.lastUpdateKey, lastUpdateValue);\r\n  }\r\n\r\n  private async resolveSessionId(): Promise<string> {\r\n    let sessionId = await this.storage.get(SESSION_ID);\r\n    if (!sessionId) {\r\n      sessionId = Math.floor(Math.random() * 1_000_000_000);\r\n      await this.storage.save(SESSION_ID, sessionId.toString(10));\r\n    }\r\n    return sessionId.toString(10);\r\n  }\r\n\r\n  private isUpToDate(): boolean {\r\n    const now = Date.now();\r\n\r\n    const ttl = this._config.refreshInterval && this._config.refreshInterval > 500 ? this._config.refreshInterval : REFRESH_INTERVAL_INIT;\r\n\r\n    return (\r\n      this.lastRefreshTimestamp > 0 &&\r\n      this.lastRefreshTimestamp <= now &&\r\n      now - this.lastRefreshTimestamp <= ttl\r\n    );\r\n  }\r\n\r\n  private initialFetchFeatures() {\r\n    if (this.isUpToDate()) {\r\n      if (!this.fetchedFromServer) {\r\n        this.fetchedFromServer = true;\r\n        this.setReady();\r\n      }\r\n      return;\r\n    }\r\n    return this.fetchFeatures();\r\n  }\r\n\r\n  private async fetchFeatures() {\r\n    if (this.fetch) {\r\n      if (this.abortController) {\r\n        this.abortController.abort();\r\n      }\r\n      this.abortController = resolveAbortController();\r\n      const signal = this.abortController\r\n        ? this.abortController.signal\r\n        : undefined;\r\n      try {\r\n        const url = new URL('/ab/v1/feature/frontend', this.url);\r\n        const method = 'GET';\r\n        url.searchParams.set('appName', this._config.appName)\r\n        url.searchParams.set('environment', this._config.environment ?? '')\r\n        url.searchParams.set('userId', this._config.userId ?? '')\r\n        url.searchParams.set('sessionId', this._config.sessionId ?? '')\r\n        url.searchParams.set('currentTime', this._config.currentTime ?? new Date().toString())\r\n        for (let entry of Object.entries(this._config.properties ?? {})) {\r\n          url.searchParams.set(entry[0], entry[1])\r\n        }\r\n\r\n        const response = await this.fetch(url.toString(), {\r\n          method,\r\n          cache: 'no-cache',\r\n          headers: this.getHeaders(),\r\n          signal,\r\n        });\r\n        if (this.state === 'error' && response.status < 400) {\r\n          this.state = 'healthy';\r\n          this.emit(EVENTS.RECOVERED);\r\n        }\r\n\r\n        if (response.ok) {\r\n          this.etag = response.headers.get('ETag') || '';\r\n          const data = await response.json();\r\n\r\n          await this.storeFeatures(data);\r\n\r\n          if (this.state !== 'healthy') {\r\n            this.state = 'healthy';\r\n          }\r\n          if (!this.fetchedFromServer) {\r\n            this.fetchedFromServer = true;\r\n            this.setReady();\r\n          }\r\n          this.storeLastRefreshTimestamp();\r\n        } else if (response.status === 304) {\r\n          this.storeLastRefreshTimestamp();\r\n        } else {\r\n          console.error(\r\n            'AbFlags: Fetching feature toggles did not have an ok response'\r\n          );\r\n          this.state = 'error';\r\n          this.emit(EVENTS.ERROR, {\r\n            type: 'HttpError',\r\n            code: response.status,\r\n          });\r\n\r\n          this.lastError = {\r\n            type: 'HttpError',\r\n            code: response.status,\r\n          };\r\n        }\r\n      } catch (e) {\r\n        if (\r\n          !(\r\n            typeof e === 'object' &&\r\n            e !== null &&\r\n            'name' in e &&\r\n            e.name === 'AbortError'\r\n          )\r\n        ) {\r\n          console.error(\r\n            'AbFlags: unable to fetch feature toggles',\r\n            e\r\n          );\r\n          this.state = 'error';\r\n          this.emit(EVENTS.ERROR, e);\r\n          this.lastError = e;\r\n        }\r\n      } finally {\r\n        this.abortController = null;\r\n      }\r\n    }\r\n  }\r\n\r\n  private async storeFeatures(features: Feature[]): Promise<void> {\r\n    this.features = features;\r\n    this.emit(EVENTS.UPDATE);\r\n    await this.storage.save(this.storeKey, features);\r\n  }\r\n\r\n  private getHeaders() {\r\n    const headers: Record<string, string> = {\r\n      [HEADER_API_KEY]: this._config.clientKey,\r\n      Accept: 'application/json',\r\n    };\r\n    headers['Content-Type'] = 'application/json';\r\n    if (this.etag) {\r\n      headers['If-None-Match'] = this.etag;\r\n    }\r\n    Object.entries(this._config.customHeaders ?? {})\r\n      .filter(notNullOrUndefined)\r\n      .forEach(([name, value]) => (headers[name] = value));\r\n    return headers;\r\n  }\r\n\r\n  isEnabled(key: string) {\r\n    const enabled = !!this.features?.find(f => f.name === key)\r\n\r\n    this.metrics.count(key, enabled);\r\n\r\n    return enabled;\r\n  }\r\n}\r\n"],"names":["E","name","callback","ctx","e","self","listener","data","evtArr","len","evts","liveEvents","i","tinyEmitterModule","TinyEmitter","HEADER_API_KEY","SESSION_ID","REFRESH_INTERVAL_INIT","getRandomValues","rnds8","rng","byteToHex","unsafeStringify","arr","offset","native","v4","options","buf","rnds","EventsHandler","uuidv4","context","enabled","featureName","eventType","impressionData","variant","baseEvent","LocalStorageProvider","repo","key","ex","InMemoryStorageProvider","EVENTS","notNullOrUndefined","value","contextString","sha256","input","cryptoSubtle","_a","_b","msgUint8","hashBuffer","x","computeContextHashValue","obj","resolveFetch","resolveAbortController","doNothing","Metrics","onError","onSent","appName","metricsInterval","disableMetrics","url","clientKey","fetch","customHeaders","metricsIntervalInitial","headers","payload","bucket","AbClient","config","resolve","error","interval","lastRefresh","contextHash","lastUpdateValue","sessionId","now","ttl","signal","method","entry","response","features","f"],"mappings":"6OAAA,SAASA,GAAK,CAGd,CAEAA,EAAE,UAAY,CACZ,GAAI,SAAUC,EAAMC,EAAUC,EAAK,CACjC,IAAIC,EAAI,KAAK,IAAM,KAAK,EAAI,CAAA,GAE5B,OAACA,EAAEH,CAAI,IAAMG,EAAEH,CAAI,EAAI,CAAA,IAAK,KAAK,CAC/B,GAAIC,EACJ,IAAKC,CACX,CAAK,EAEM,IACR,EAED,KAAM,SAAUF,EAAMC,EAAUC,EAAK,CACnC,IAAIE,EAAO,KACX,SAASC,GAAY,CACnBD,EAAK,IAAIJ,EAAMK,CAAQ,EACvBJ,EAAS,MAAMC,EAAK,SAAS,CAEnC,CACI,OAAAG,EAAS,EAAIJ,EACN,KAAK,GAAGD,EAAMK,EAAUH,CAAG,CACnC,EAED,KAAM,SAAUF,EAAM,CACpB,IAAIM,EAAO,CAAA,EAAG,MAAM,KAAK,UAAW,CAAC,EACjCC,IAAW,KAAK,IAAM,KAAK,EAAI,CAAA,IAAKP,CAAI,GAAK,CAAE,GAAE,MAAK,EACtD,EAAI,EACJQ,EAAMD,EAAO,OAEjB,IAAK,EAAG,EAAIC,EAAK,IACfD,EAAO,CAAC,EAAE,GAAG,MAAMA,EAAO,CAAC,EAAE,IAAKD,CAAI,EAGxC,OAAO,IACR,EAED,IAAK,SAAUN,EAAMC,EAAU,CAC7B,IAAI,EAAI,KAAK,IAAM,KAAK,EAAI,CAAA,GACxBQ,EAAO,EAAET,CAAI,EACbU,EAAa,CAAA,EAEjB,GAAID,GAAQR,EACV,QAASU,EAAI,EAAGH,EAAMC,EAAK,OAAQE,EAAIH,EAAKG,IACtCF,EAAKE,CAAC,EAAE,KAAOV,GAAYQ,EAAKE,CAAC,EAAE,GAAG,IAAMV,GAC9CS,EAAW,KAAKD,EAAKE,CAAC,CAAC,EAQ7B,OAACD,EAAW,OACR,EAAEV,CAAI,EAAIU,EACV,OAAO,EAAEV,CAAI,EAEV,IACR,CACH,EAEAY,EAAc,QAAGb,EACjB,IAAAc,EAAAD,EAAA,QAAA,YAA6Bb,EChEtB,MAAMe,EAAiB,UAEjBC,EAAa,aACbC,EAAwB,ICFrC,IAAIC,EACJ,MAAMC,EAAQ,IAAI,WAAW,EAAE,EAChB,SAASC,GAAM,CAE5B,GAAI,CAACF,IAEHA,EAAkB,OAAO,OAAW,KAAe,OAAO,iBAAmB,OAAO,gBAAgB,KAAK,MAAM,EAE3G,CAACA,GACH,MAAM,IAAI,MAAM,0GAA0G,EAI9H,OAAOA,EAAgBC,CAAK,CAC9B,CCXA,MAAME,EAAY,CAAA,EAElB,QAAST,EAAI,EAAGA,EAAI,IAAK,EAAEA,EACzBS,EAAU,MAAMT,EAAI,KAAO,SAAS,EAAE,EAAE,MAAM,CAAC,CAAC,EAG3C,SAASU,EAAgBC,EAAKC,EAAS,EAAG,CAG/C,OAAOH,EAAUE,EAAIC,EAAS,CAAC,CAAC,EAAIH,EAAUE,EAAIC,EAAS,CAAC,CAAC,EAAIH,EAAUE,EAAIC,EAAS,CAAC,CAAC,EAAIH,EAAUE,EAAIC,EAAS,CAAC,CAAC,EAAI,IAAMH,EAAUE,EAAIC,EAAS,CAAC,CAAC,EAAIH,EAAUE,EAAIC,EAAS,CAAC,CAAC,EAAI,IAAMH,EAAUE,EAAIC,EAAS,CAAC,CAAC,EAAIH,EAAUE,EAAIC,EAAS,CAAC,CAAC,EAAI,IAAMH,EAAUE,EAAIC,EAAS,CAAC,CAAC,EAAIH,EAAUE,EAAIC,EAAS,CAAC,CAAC,EAAI,IAAMH,EAAUE,EAAIC,EAAS,EAAE,CAAC,EAAIH,EAAUE,EAAIC,EAAS,EAAE,CAAC,EAAIH,EAAUE,EAAIC,EAAS,EAAE,CAAC,EAAIH,EAAUE,EAAIC,EAAS,EAAE,CAAC,EAAIH,EAAUE,EAAIC,EAAS,EAAE,CAAC,EAAIH,EAAUE,EAAIC,EAAS,EAAE,CAAC,CACnf,CCfe,MAAAC,EAAA,CACb,WAFiB,OAAO,OAAW,KAAe,OAAO,YAAc,OAAO,WAAW,KAAK,MAAM,CAGtG,ECCA,SAASC,EAAGC,EAASC,EAAKJ,EAAQ,CAChC,GAAIC,EAAO,YAAc,CAACG,GAAO,CAACD,EAChC,OAAOF,EAAO,aAGhBE,EAAUA,GAAW,GACrB,MAAME,EAAOF,EAAQ,SAAWA,EAAQ,KAAOP,KAE/C,OAAAS,EAAK,CAAC,EAAIA,EAAK,CAAC,EAAI,GAAO,GAC3BA,EAAK,CAAC,EAAIA,EAAK,CAAC,EAAI,GAAO,IAYpBP,EAAgBO,CAAI,CAC7B,CCvBA,MAAMC,CAAc,CACR,iBAAkB,CACtB,OAAOC,EAAO,CAClB,CAEO,sBACHC,EACAC,EACAC,EACAC,EACAC,EACAC,EACF,CACE,MAAMC,EAAY,KAAK,gBACnBN,EACAC,EACAC,EACAC,EACAC,CAAA,EAGJ,OAAIC,EACO,CACH,GAAGC,EACH,QAAAD,CAAA,EAGDC,CACX,CAEQ,gBACJN,EACAC,EACAC,EACAC,EACAC,EACF,CACS,MAAA,CACH,UAAAD,EACA,QAAS,KAAK,gBAAgB,EAC9B,QAAAH,EACA,QAAAC,EACA,YAAAC,EACA,eAAAE,CAAA,CAER,CACJ,CC/CO,MAAMG,CAAiD,CAG5D,YAAYtC,EAAO,WAAY,CAC7B,KAAK,OAASA,CAChB,CAEA,MAAa,KAAKA,EAAcM,EAAW,CACnC,MAAAiC,EAAO,KAAK,UAAUjC,CAAI,EAC1BkC,EAAM,GAAG,KAAK,MAAM,IAAIxC,CAAI,GAC9B,GAAA,CACK,OAAA,aAAa,QAAQwC,EAAKD,CAAI,QAC9BE,EAAI,CACX,QAAQ,MAAMA,CAAE,CAClB,CACF,CAEO,IAAIzC,EAAc,CACnB,GAAA,CACF,MAAMwC,EAAM,GAAG,KAAK,MAAM,IAAIxC,CAAI,GAC5BM,EAAO,OAAO,aAAa,QAAQkC,CAAG,EAC5C,OAAOlC,EAAO,KAAK,MAAMA,CAAI,EAAI,aAC1B,EAAG,CACV,QAAQ,MAAM,CAAC,CACjB,CACF,CACF,CC1BO,MAAMoC,CAAoD,CAA1D,aAAA,CACG,KAAA,UAAY,GAAI,CAExB,MAAa,KAAK1C,EAAcM,EAAW,CACpC,KAAA,MAAM,IAAIN,EAAMM,CAAI,CAC3B,CAEA,MAAa,IAAIN,EAAc,CACtB,OAAA,KAAK,MAAM,IAAIA,CAAI,CAC5B,CACF,CCVO,MAAM2C,EAAS,CACpB,KAAM,cACN,MAAO,QACP,MAAO,QACP,OAAQ,SACR,WAAY,aACZ,KAAM,OACN,UAAW,WACb,EAEaC,EAAqB,CAAC,CAAA,CAAGC,CAAK,IAClBA,GAAU,KAEtBC,EAAiBf,GAErB,KAAK,UAAUA,CAAO,EAGzBgB,EAAS,MAAOC,GAAmC,SACjD,MAAAC,EACJ,OAAO,WAAe,OAAeC,EAAA,WAAW,SAAX,MAAAA,EAAmB,SACpDC,EAAA,WAAW,SAAX,YAAAA,EAAmB,OACnB,OAGJ,GAAA,OAAO,YAAgB,KACvB,EAACF,GAAA,MAAAA,EAAc,SACf,OAAO,WAAe,IAEhB,MAAA,IAAI,MAAM,gCAAgC,EAGlD,MAAMG,EAAW,IAAI,YAAY,EAAE,OAAOJ,CAAK,EACzCK,EAAa,MAAMJ,EAAa,OAAO,UAAWG,CAAQ,EACzD,OAAA,MAAM,KAAK,IAAI,WAAWC,CAAU,CAAC,EACzC,IAAKC,GAAMA,EAAE,SAAS,EAAE,EAAE,SAAS,EAAG,GAAG,CAAC,EAC1C,KAAK,EAAE,CACZ,EACaC,EAA0B,MAAOC,GAAmB,CACzD,MAAAX,EAAQC,EAAcU,CAAG,EAE3B,GAAA,CACK,OAAA,MAAMT,EAAOF,CAAK,CAAA,MACnB,CACC,OAAAA,CACT,CACF,EAEaY,EAAe,IAAM,CAC5B,GAAA,CACF,GAAI,OAAO,OAAW,KAAe,UAAW,OACvC,OAAA,OAAO,MAAM,KAAK,MAAM,EAGjC,GAAI,UAAW,WACN,OAAA,WAAW,MAAM,KAAK,UAAU,QAElCtD,EAAG,CACF,QAAA,MAAM,oCAAqCA,CAAC,CACtD,CAGF,EAEauD,EAAyB,IAAM,CACtC,GAAA,CACF,GAAI,OAAO,OAAW,KAAe,oBAAqB,OACjD,OAAA,IAAI,OAAO,gBAGpB,GAAI,UAAW,WACN,OAAA,IAAI,WAAW,sBAEjBvD,EAAG,CACF,QAAA,MAAM,sDAAuDA,CAAC,CACxE,CACF,EC5CMwD,EAAY,IAAM,CAAC,EAElB,MAAMC,CAAQ,CAcnB,YAAY,CACE,QAAAC,EACA,OAAAC,EACA,QAAAC,EACA,gBAAAC,EACA,eAAAC,EAAiB,GACjB,IAAAC,EACA,UAAAC,EACA,MAAAC,EACA,cAAAC,EAAgB,CAAC,EACjB,uBAAAC,CAAA,EACiB,CAC7B,KAAK,QAAUT,EACf,KAAK,OAASC,GAAUH,EACxB,KAAK,SAAWM,EAChB,KAAK,gBAAkBD,GAAoB,IAC3C,KAAK,uBAAyBM,GAA0B,IACxD,KAAK,QAAUP,EACf,KAAK,IAAMG,aAAe,IAAMA,EAAM,IAAI,IAAIA,CAAG,EACjD,KAAK,UAAYC,EACZ,KAAA,OAAS,KAAK,oBACnB,KAAK,MAAQC,EACb,KAAK,cAAgBC,CACvB,CAEO,OAAQ,CACb,GAAI,KAAK,SACA,MAAA,GAIP,OAAO,KAAK,iBAAoB,UAChC,KAAK,gBAAkB,IAEnB,KAAK,wBAA0B,KAAK,uBAAyB,EAC/D,WAAW,SAAY,CACrB,KAAK,WAAW,EAChB,MAAM,KAAK,aAAY,EACtB,KAAK,sBAAsB,EAE9B,KAAK,WAAW,EAGtB,CAEO,MAAO,CACR,KAAK,QACP,aAAa,KAAK,KAAK,EACvB,OAAO,KAAK,MAEhB,CAEO,mBAA4B,CAC1B,MAAA,CACL,UAAW,KACX,KAAM,KACN,SAAU,CAAC,CAAA,CAEf,CAEQ,YAAa,CACnB,MAAME,EAAkC,CACtC,CAACzD,CAAc,EAAG,KAAK,UACvB,OAAU,mBACV,eAAgB,kBAAA,EAGlB,cAAO,QAAQ,KAAK,aAAa,EAC9B,OAAO8B,CAAkB,EACzB,QAAQ,CAAC,CAAC5C,EAAM6C,CAAK,IAAO0B,EAAQvE,CAAI,EAAI6C,CAAM,EAE9C0B,CACT,CAEA,MAAa,aAA6B,CAGlC,MAAAL,EAAM,GAAG,KAAK,GAAG,eACjBM,EAAU,KAAK,aAEjB,GAAA,MAAK,cAAcA,CAAO,EAI1B,GAAA,CACI,MAAA,KAAK,MAAMN,EAAK,CACpB,MAAO,WACP,OAAQ,OACR,QAAS,KAAK,WAAW,EACzB,KAAM,KAAK,UAAUM,CAAO,CAAA,CAC7B,EACD,KAAK,OAAOA,CAAO,QACZrE,EAAG,CACF,QAAA,MAAM,0CAA2CA,CAAC,EAC1D,KAAK,QAAQA,CAAC,CAChB,CACF,CAEO,MAAMH,EAAcgC,EAA2B,CACpD,OAAI,KAAK,UAAY,CAAC,KAAK,OAClB,IAET,KAAK,aAAahC,CAAI,EACtB,KAAK,OAAO,SAASA,CAAI,EAAEgC,EAAU,MAAQ,IAAI,IAC1C,GACT,CAEQ,aAAahC,EAAc,CACjC,GAAI,KAAK,UAAY,CAAC,KAAK,OAClB,MAAA,GAEJ,KAAK,OAAO,SAASA,CAAI,IACvB,KAAA,OAAO,SAASA,CAAI,EAAI,CAC3B,IAAK,EACL,GAAI,CAAA,EAGV,CAEQ,YAAmB,CACpB,KAAA,MAAQ,YAAY,SAAY,CACnC,MAAM,KAAK,aAAY,EACtB,KAAK,eAAe,CACzB,CAEQ,cAAcwE,EAAkB,CACtC,OAAO,OAAO,KAAKA,EAAQ,OAAO,QAAQ,EAAE,SAAW,CACzD,CAEQ,YAAsB,CACtB,MAAAC,EAAS,CAAE,GAAG,KAAK,OAAQ,KAAM,IAAI,MACnC,eAAA,MAAM,eAAeA,CAAM,EAAE,EAChC,KAAA,OAAS,KAAK,oBAEZ,CACL,OAAAA,EACA,cAAe,KACf,QAAS,KAAK,QACd,WAAY,SAAA,CAEhB,CACF,CCxLO,MAAMC,UAAiB7D,CAAY,CAqBxC,YAAY8D,EAAiB,CAGvB,GAFE,QAfR,KAAQ,kBAAoB,GAC5B,KAAiB,SAAW,UAC5B,KAAiB,cAAgB,YAIjC,KAAQ,KAAe,GAGvB,KAAQ,kBAAoB,GAE5B,KAAQ,QAAU,GAMZ,CAACA,EAAO,UACJ,MAAA,IAAI,MAAM,uBAAuB,EAErC,GAAA,CAACA,EAAO,QACJ,MAAA,IAAI,MAAM,sBAAsB,EAGnC,KAAA,cAAgB,IAAI9C,EAEpB,KAAA,IAAM8C,EAAO,KAAO,uBAGpB,KAAA,QACHA,EAAO,kBACN,OAAO,OAAW,IACf,IAAIrC,EACJ,IAAII,GACV,KAAK,MAAQe,IACR,KAAK,OACA,QAAA,MACN,8GAAA,EAIJ,KAAK,QAAUkB,EACf,KAAK,MAAQ,IAAI,QAASC,GAAY,CACpC,KAAK,OACF,KAAKA,CAAO,EACZ,MAAOC,GAAU,CAChB,QAAQ,MAAMA,CAAK,EACnB,KAAK,MAAQ,QACR,KAAA,KAAKlC,EAAO,MAAOkC,CAAK,EAC7B,KAAK,UAAYA,EACTD,GAAA,CACT,CAAA,CACJ,EACD,KAAK,SAAW,GAChB,KAAK,qBAAuB,EAC5B,KAAK,MAAQ,eAER,KAAA,QAAU,IAAIhB,EAAQ,CACzB,QAAS,KAAK,KAAK,KAAK,KAAMjB,EAAO,KAAK,EAC1C,OAAQ,KAAK,KAAK,KAAK,KAAMA,EAAO,IAAI,EACxC,QAAS,KAAK,QAAQ,QACtB,gBAAiB,KAAK,QAAQ,gBAC9B,eAAgB,KAAK,QAAQ,gBAAkB,GAC/C,IAAK,KAAK,IACV,UAAW,KAAK,QAAQ,UACxB,MAAO,KAAK,MACZ,cAAe,KAAK,QAAQ,cAC5B,uBAAwB,KAAK,QAAQ,wBAA0B,EAAA,CAChE,CACH,CAEA,MAAc,MAAsB,CAClC,KAAK,QAAQ,UAAY,MAAM,KAAK,iBAAiB,EAEhD,KAAA,SAAY,MAAM,KAAK,QAAQ,IAAI,KAAK,QAAQ,GAAM,GACtD,KAAA,qBAAuB,MAAM,KAAK,wBAAwB,EAE/D,KAAK,MAAQ,UACR,KAAA,KAAKA,EAAO,IAAI,CACvB,CAEA,MAAa,OAAuB,CAElC,GADA,KAAK,QAAU,GACX,KAAK,SAAU,CACT,QAAA,MACN,8GAAA,EAEF,MACF,CACA,MAAM,KAAK,MACX,KAAK,QAAQ,QACP,MAAAmC,EAAW,KAAK,QAAQ,iBAAmB,KAAK,QAAQ,gBAAkB,IAAM,KAAK,QAAQ,gBAAkB9D,EAErH,MAAM,KAAK,uBAEP8D,EAAW,IACb,KAAK,SAAW,YAAY,IAAM,KAAK,cAAA,EAAiBA,CAAQ,EAEpE,CAEA,MAAc,yBAA2C,CACvD,MAAMC,EACJ,MAAM,KAAK,QAAQ,IAAI,KAAK,aAAa,EACrCC,EAAc,MAAMzB,EAAwB,CAChD,QAAS,KAAK,QAAQ,QACtB,UAAW,KAAK,QAAQ,UACxB,YAAa,KAAK,QAAQ,YAC1B,OAAQ,KAAK,QAAQ,OACrB,YAAa,KAAK,QAAQ,YAC1B,WAAY,KAAK,QAAQ,UAAA,CAC1B,EACD,OAAOwB,GAAA,YAAAA,EAAa,OAAQC,EAAcD,EAAY,UAAY,CACpE,CAEQ,UAAW,CACjB,KAAK,kBAAoB,GACpB,KAAA,KAAKpC,EAAO,KAAK,CACxB,CAEA,MAAc,2BAA2C,CAClD,KAAA,qBAAuB,KAAK,MAUjC,MAAMsC,EAAmC,CACvC,IATkB,MAAM1B,EAAwB,CAChD,QAAS,KAAK,QAAQ,QACtB,UAAW,KAAK,QAAQ,UACxB,YAAa,KAAK,QAAQ,YAC1B,OAAQ,KAAK,QAAQ,OACrB,YAAa,KAAK,QAAQ,YAC1B,WAAY,KAAK,QAAQ,UAAA,CAC1B,EAGC,UAAW,KAAK,oBAAA,EAElB,MAAM,KAAK,QAAQ,KAAK,KAAK,cAAe0B,CAAe,CAC7D,CAEA,MAAc,kBAAoC,CAChD,IAAIC,EAAY,MAAM,KAAK,QAAQ,IAAInE,CAAU,EACjD,OAAKmE,IACHA,EAAY,KAAK,MAAM,KAAK,OAAA,EAAW,GAAa,EACpD,MAAM,KAAK,QAAQ,KAAKnE,EAAYmE,EAAU,SAAS,EAAE,CAAC,GAErDA,EAAU,SAAS,EAAE,CAC9B,CAEQ,YAAsB,CACtB,MAAAC,EAAM,KAAK,MAEXC,EAAM,KAAK,QAAQ,iBAAmB,KAAK,QAAQ,gBAAkB,IAAM,KAAK,QAAQ,gBAAkBpE,EAG9G,OAAA,KAAK,qBAAuB,GAC5B,KAAK,sBAAwBmE,GAC7BA,EAAM,KAAK,sBAAwBC,CAEvC,CAEQ,sBAAuB,CACzB,GAAA,KAAK,aAAc,CAChB,KAAK,oBACR,KAAK,kBAAoB,GACzB,KAAK,SAAS,GAEhB,MACF,CACA,OAAO,KAAK,eACd,CAEA,MAAc,eAAgB,CAC5B,GAAI,KAAK,MAAO,CACV,KAAK,iBACP,KAAK,gBAAgB,QAEvB,KAAK,gBAAkB1B,IACvB,MAAM2B,EAAS,KAAK,gBAChB,KAAK,gBAAgB,OACrB,OACA,GAAA,CACF,MAAMnB,EAAM,IAAI,IAAI,0BAA2B,KAAK,GAAG,EACjDoB,EAAS,MACfpB,EAAI,aAAa,IAAI,UAAW,KAAK,QAAQ,OAAO,EACpDA,EAAI,aAAa,IAAI,cAAe,KAAK,QAAQ,aAAe,EAAE,EAClEA,EAAI,aAAa,IAAI,SAAU,KAAK,QAAQ,QAAU,EAAE,EACxDA,EAAI,aAAa,IAAI,YAAa,KAAK,QAAQ,WAAa,EAAE,EAC1DA,EAAA,aAAa,IAAI,cAAe,KAAK,QAAQ,aAAmB,IAAA,OAAO,SAAU,CAAA,EAC5E,QAAAqB,KAAS,OAAO,QAAQ,KAAK,QAAQ,YAAc,CAAA,CAAE,EAC5DrB,EAAI,aAAa,IAAIqB,EAAM,CAAC,EAAGA,EAAM,CAAC,CAAC,EAGzC,MAAMC,EAAW,MAAM,KAAK,MAAMtB,EAAI,WAAY,CAChD,OAAAoB,EACA,MAAO,WACP,QAAS,KAAK,WAAW,EACzB,OAAAD,CAAA,CACD,EAMD,GALI,KAAK,QAAU,SAAWG,EAAS,OAAS,MAC9C,KAAK,MAAQ,UACR,KAAA,KAAK7C,EAAO,SAAS,GAGxB6C,EAAS,GAAI,CACf,KAAK,KAAOA,EAAS,QAAQ,IAAI,MAAM,GAAK,GACtC,MAAAlF,EAAO,MAAMkF,EAAS,OAEtB,MAAA,KAAK,cAAclF,CAAI,EAEzB,KAAK,QAAU,YACjB,KAAK,MAAQ,WAEV,KAAK,oBACR,KAAK,kBAAoB,GACzB,KAAK,SAAS,GAEhB,KAAK,0BAA0B,CAAA,MACtBkF,EAAS,SAAW,IAC7B,KAAK,0BAA0B,GAEvB,QAAA,MACN,+DAAA,EAEF,KAAK,MAAQ,QACR,KAAA,KAAK7C,EAAO,MAAO,CACtB,KAAM,YACN,KAAM6C,EAAS,MAAA,CAChB,EAED,KAAK,UAAY,CACf,KAAM,YACN,KAAMA,EAAS,MAAA,SAGZ,EAAG,CAGN,OAAO,GAAM,UACb,IAAM,MACN,SAAU,GACV,EAAE,OAAS,eAGL,QAAA,MACN,2CACA,CAAA,EAEF,KAAK,MAAQ,QACR,KAAA,KAAK7C,EAAO,MAAO,CAAC,EACzB,KAAK,UAAY,EACnB,QACA,CACA,KAAK,gBAAkB,IACzB,CACF,CACF,CAEA,MAAc,cAAc8C,EAAoC,CAC9D,KAAK,SAAWA,EACX,KAAA,KAAK9C,EAAO,MAAM,EACvB,MAAM,KAAK,QAAQ,KAAK,KAAK,SAAU8C,CAAQ,CACjD,CAEQ,YAAa,CACnB,MAAMlB,EAAkC,CACtC,CAACzD,CAAc,EAAG,KAAK,QAAQ,UAC/B,OAAQ,kBAAA,EAEV,OAAAyD,EAAQ,cAAc,EAAI,mBACtB,KAAK,OACCA,EAAA,eAAe,EAAI,KAAK,MAElC,OAAO,QAAQ,KAAK,QAAQ,eAAiB,CAAE,CAAA,EAC5C,OAAO3B,CAAkB,EACzB,QAAQ,CAAC,CAAC5C,EAAM6C,CAAK,IAAO0B,EAAQvE,CAAI,EAAI6C,CAAM,EAC9C0B,CACT,CAEA,UAAU/B,EAAa,OACf,MAAAR,EAAU,CAAC,GAACkB,EAAA,KAAK,WAAL,MAAAA,EAAe,KAAKwC,GAAKA,EAAE,OAASlD,IAEjD,YAAA,QAAQ,MAAMA,EAAKR,CAAO,EAExBA,CACT,CACF","x_google_ignoreList":[0,2,3,4,5]}