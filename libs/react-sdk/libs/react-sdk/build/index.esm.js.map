{"version":3,"file":"index.esm.js","sources":["../../../src/lib/ab-client.tsx","../../../../../node_modules/tiny-emitter/index.js","../../../../js-sdk/src/types/state.ts","../../../../../node_modules/uuid/dist/esm-browser/rng.js","../../../../../node_modules/uuid/dist/esm-browser/stringify.js","../../../../../node_modules/uuid/dist/esm-browser/native.js","../../../../../node_modules/uuid/dist/esm-browser/v4.js","../../../../js-sdk/src/lib/events-handler.ts","../../../../js-sdk/src/storage/storage-provider-local.ts","../../../../js-sdk/src/storage/storage-provider-inmemory.ts","../../../../js-sdk/node_modules/environment/index.js","../../../../js-sdk/src/utils/index.ts","../../../../js-sdk/src/lib/metrics.ts","../../../../js-sdk/src/lib/ab-client.ts","../../../src/lib/ab-provider.tsx"],"sourcesContent":["export function AbClient() {\n  return (\n    <div>\n      <h1>Welcome to ReactSdk!</h1>\n    </div>\n  );\n}\n\nexport default AbClient;\n","function E () {\n  // Keep this empty so it's easier to inherit from\n  // (via https://github.com/lipsmack from https://github.com/scottcorgan/tiny-emitter/issues/3)\n}\n\nE.prototype = {\n  on: function (name, callback, ctx) {\n    var e = this.e || (this.e = {});\n\n    (e[name] || (e[name] = [])).push({\n      fn: callback,\n      ctx: ctx\n    });\n\n    return this;\n  },\n\n  once: function (name, callback, ctx) {\n    var self = this;\n    function listener () {\n      self.off(name, listener);\n      callback.apply(ctx, arguments);\n    };\n\n    listener._ = callback\n    return this.on(name, listener, ctx);\n  },\n\n  emit: function (name) {\n    var data = [].slice.call(arguments, 1);\n    var evtArr = ((this.e || (this.e = {}))[name] || []).slice();\n    var i = 0;\n    var len = evtArr.length;\n\n    for (i; i < len; i++) {\n      evtArr[i].fn.apply(evtArr[i].ctx, data);\n    }\n\n    return this;\n  },\n\n  off: function (name, callback) {\n    var e = this.e || (this.e = {});\n    var evts = e[name];\n    var liveEvents = [];\n\n    if (evts && callback) {\n      for (var i = 0, len = evts.length; i < len; i++) {\n        if (evts[i].fn !== callback && evts[i].fn._ !== callback)\n          liveEvents.push(evts[i]);\n      }\n    }\n\n    // Remove event from queue to prevent memory leak\n    // Suggested by https://github.com/lazd\n    // Ref: https://github.com/scottcorgan/tiny-emitter/commit/c6ebfaa9bc973b33d110a84a307742b7cf94c953#commitcomment-5024910\n\n    (liveEvents.length)\n      ? e[name] = liveEvents\n      : delete e[name];\n\n    return this;\n  }\n};\n\nmodule.exports = E;\nmodule.exports.TinyEmitter = E;\n","export type SdkState = 'initializing' | 'error' | 'healthy';\r\n\r\nexport const HEADER_API_KEY = 'api_key'\r\nexport const HEADER_E_TAG = 'api_key'\r\nexport const SESSION_ID = 'session_id'\r\nexport const REFRESH_INTERVAL_INIT = 30\r\n","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]];\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;","import { v4 as uuidv4 } from 'uuid';\r\nimport {AbContext} from \"../types\";\r\n\r\nclass EventsHandler {\r\n    private generateEventId() {\r\n        return uuidv4();\r\n    }\r\n\r\n    public createImpressionEvent(\r\n        context: AbContext,\r\n        enabled: boolean,\r\n        featureName: string,\r\n        eventType: string,\r\n        impressionData?: boolean,\r\n        variant?: string\r\n    ) {\r\n        const baseEvent = this.createBaseEvent(\r\n            context,\r\n            enabled,\r\n            featureName,\r\n            eventType,\r\n            impressionData\r\n        );\r\n\r\n        if (variant) {\r\n            return {\r\n                ...baseEvent,\r\n                variant,\r\n            };\r\n        }\r\n        return baseEvent;\r\n    }\r\n\r\n    private createBaseEvent(\r\n        context: AbContext,\r\n        enabled: boolean,\r\n        featureName: string,\r\n        eventType: string,\r\n        impressionData?: boolean\r\n    ) {\r\n        return {\r\n            eventType,\r\n            eventId: this.generateEventId(),\r\n            context,\r\n            enabled,\r\n            featureName,\r\n            impressionData,\r\n        };\r\n    }\r\n}\r\n\r\nexport default EventsHandler;\r\n","import {IStorageProvider} from \"./storage-provider\";\r\n\r\nexport class LocalStorageProvider implements IStorageProvider {\r\n  private readonly prefix: string;\r\n\r\n  constructor(name = 'ab:cache') {\r\n    this.prefix = name;\r\n  }\r\n\r\n  public async save(name: string, data: any) {\r\n    const repo = JSON.stringify(data);\r\n    const key = `${this.prefix}:${name}`;\r\n    try {\r\n      window.localStorage.setItem(key, repo);\r\n    } catch (ex) {\r\n      console.error(ex);\r\n    }\r\n  }\r\n\r\n  public get(name: string) {\r\n    try {\r\n      const key = `${this.prefix}:${name}`;\r\n      const data = window.localStorage.getItem(key);\r\n      return data ? JSON.parse(data) : undefined;\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n  }\r\n}\r\n","import {IStorageProvider} from './storage-provider';\r\n\r\nexport class InMemoryStorageProvider implements IStorageProvider {\r\n  private store = new Map();\r\n\r\n  public async save(name: string, data: any) {\r\n    this.store.set(name, data);\r\n  }\r\n\r\n  public async get(name: string) {\r\n    return this.store.get(name);\r\n  }\r\n}\r\n","/* globals WorkerGlobalScope, DedicatedWorkerGlobalScope, SharedWorkerGlobalScope, ServiceWorkerGlobalScope */\n\nexport const isBrowser = globalThis.window?.document !== undefined;\n\nexport const isNode = globalThis.process?.versions?.node !== undefined;\n\nexport const isBun = globalThis.process?.versions?.bun !== undefined;\n\nexport const isDeno = globalThis.Deno?.version?.deno !== undefined;\n\nexport const isElectron = globalThis.process?.versions?.electron !== undefined;\n\nexport const isJsDom = globalThis.navigator?.userAgent?.includes('jsdom') === true;\n\nexport const isWebWorker = typeof WorkerGlobalScope !== 'undefined' && globalThis instanceof WorkerGlobalScope;\n\nexport const isDedicatedWorker = typeof DedicatedWorkerGlobalScope !== 'undefined' && globalThis instanceof DedicatedWorkerGlobalScope;\n\nexport const isSharedWorker = typeof SharedWorkerGlobalScope !== 'undefined' && globalThis instanceof SharedWorkerGlobalScope;\n\nexport const isServiceWorker = typeof ServiceWorkerGlobalScope !== 'undefined' && globalThis instanceof ServiceWorkerGlobalScope;\n\n// Note: I'm intentionally not DRYing up the other variables to keep them \"lazy\".\nconst platform = globalThis.navigator?.userAgentData?.platform;\n\nexport const isMacOs = platform === 'macOS'\n\t|| globalThis.navigator?.platform === 'MacIntel' // Even on Apple silicon Macs.\n\t|| globalThis.navigator?.userAgent?.includes(' Mac ') === true\n\t|| globalThis.process?.platform === 'darwin';\n\nexport const isWindows = platform === 'Windows'\n\t|| globalThis.navigator?.platform === 'Win32'\n\t|| globalThis.process?.platform === 'win32';\n\nexport const isLinux = platform === 'Linux'\n\t|| globalThis.navigator?.platform?.startsWith('Linux') === true\n\t|| globalThis.navigator?.userAgent?.includes(' Linux ') === true\n\t|| globalThis.process?.platform === 'linux';\n\nexport const isIos = platform === 'iOS'\n\t|| (globalThis.navigator?.platform === 'MacIntel' && globalThis.navigator?.maxTouchPoints > 1)\n\t|| /iPad|iPhone|iPod/.test(globalThis.navigator?.platform);\n\nexport const isAndroid = platform === 'Android'\n\t|| globalThis.navigator?.platform === 'Android'\n\t|| globalThis.navigator?.userAgent?.includes(' Android ') === true\n\t|| globalThis.process?.platform === 'android';\n","import {AbContext, Environment} from \"../types\";\r\nimport {isBrowser, isIos, isLinux, isMacOs, isNode, isWindows} from 'environment';\r\n\r\nexport const EVENTS = {\r\n  INIT: 'initialized',\r\n  ERROR: 'error',\r\n  READY: 'ready',\r\n  UPDATE: 'update',\r\n  IMPRESSION: 'impression',\r\n  SENT: 'sent',\r\n  RECOVERED: 'recovered',\r\n};\r\n\r\nexport const notNullOrUndefined = ([, value]: [string, string]) =>\r\n  value !== undefined && value !== null;\r\n\r\nexport const contextString = (context: AbContext): string => {\r\n\r\n  return JSON.stringify(context);\r\n};\r\n\r\nconst sha256 = async (input: string): Promise<string> => {\r\n  const cryptoSubtle =\r\n    typeof globalThis !== 'undefined' && globalThis.crypto?.subtle\r\n      ? globalThis.crypto?.subtle\r\n      : undefined;\r\n\r\n  if (\r\n    typeof TextEncoder === 'undefined' ||\r\n    !cryptoSubtle?.digest ||\r\n    typeof Uint8Array === 'undefined'\r\n  ) {\r\n    throw new Error('Hashing function not available');\r\n  }\r\n\r\n  const msgUint8 = new TextEncoder().encode(input);\r\n  const hashBuffer = await cryptoSubtle.digest('SHA-256', msgUint8);\r\n  return Array.from(new Uint8Array(hashBuffer))\r\n    .map((x) => x.toString(16).padStart(2, '0'))\r\n    .join('');\r\n};\r\nexport const computeContextHashValue = async (obj: AbContext) => {\r\n  const value = contextString(obj);\r\n\r\n  try {\r\n    return await sha256(value);\r\n  } catch {\r\n    return value;\r\n  }\r\n};\r\n\r\nexport const resolveFetch = () => {\r\n  try {\r\n    if (typeof window !== 'undefined' && 'fetch' in window) {\r\n      return fetch.bind(window);\r\n    }\r\n\r\n    if ('fetch' in globalThis) {\r\n      return fetch.bind(globalThis);\r\n    }\r\n  } catch (e) {\r\n    console.error('Unleash failed to resolve \"fetch\"', e);\r\n  }\r\n\r\n  return undefined;\r\n};\r\n\r\nexport const resolveAbortController = () => {\r\n  try {\r\n    if (typeof window !== 'undefined' && 'AbortController' in window) {\r\n      return new window.AbortController();\r\n    }\r\n\r\n    if ('fetch' in globalThis) {\r\n      return new globalThis.AbortController();\r\n    }\r\n  } catch (e) {\r\n    console.error('Unleash failed to resolve \"AbortController\" factory', e);\r\n  }\r\n};\r\n\r\nexport const currentEnvironment: () => Environment = () => {\r\n  return {\r\n    os: isMacOs ? 'mac-os'\r\n      : isWindows ? 'window'\r\n        : isLinux ? 'linux'\r\n          : isIos ? 'ios'\r\n            : 'android',\r\n    environment: isBrowser\r\n      ? 'browser'\r\n      : isNode\r\n        ? 'backend'\r\n        : 'web-worker'\r\n  }\r\n}\r\n","import {currentEnvironment, notNullOrUndefined} from \"../utils\";\r\nimport {Environment, HEADER_API_KEY} from \"../types\";\r\n\r\nexport interface MetricsOptions {\r\n  onError: OnError;\r\n  onSent?: OnSent;\r\n  appName: string;\r\n  metricsInterval?: number;\r\n  disableMetrics?: boolean;\r\n  url: URL | string;\r\n  clientKey: string;\r\n  fetch: any;\r\n  customHeaders?: Record<string, string>;\r\n  metricsIntervalInitial?: number;\r\n}\r\n\r\ninterface Bucket {\r\n  start: Date;\r\n  stop: Date | null;\r\n  features: {\r\n    [s: string]: { yes: number; no: number; };\r\n  };\r\n}\r\n\r\ninterface Payload {\r\n  bucket: Bucket;\r\n  appName: string;\r\n  instanceId: string;\r\n  createdAt: Date;\r\n  os: string;\r\n  environment: string;\r\n}\r\n\r\ntype OnError = (error: unknown) => void;\r\ntype OnSent = (payload: Payload) => void;\r\n// eslint-disable-next-line @typescript-eslint/no-empty-function\r\nconst doNothing = () => {};\r\n\r\nexport class Metrics {\r\n  private readonly onError: OnError;\r\n  private readonly onSent: OnSent;\r\n  private bucket: Bucket;\r\n  private readonly appName: string;\r\n  private readonly metricsInterval?: number;\r\n  private readonly disabled: boolean;\r\n  private readonly url: URL;\r\n  private readonly clientKey: string;\r\n  private timer: any;\r\n  private readonly fetch: any;\r\n  private customHeaders: Record<string, string>;\r\n  private readonly metricsIntervalInitial?: number;\r\n  private environment: Environment;\r\n\r\n  constructor({\r\n                onError,\r\n                onSent,\r\n                appName,\r\n                metricsInterval,\r\n                disableMetrics = false,\r\n                url,\r\n                clientKey,\r\n                fetch,\r\n                customHeaders = {},\r\n                metricsIntervalInitial,\r\n              }: MetricsOptions) {\r\n    this.onError = onError;\r\n    this.onSent = onSent || doNothing;\r\n    this.disabled = disableMetrics;\r\n    this.metricsInterval = metricsInterval ??  1000;\r\n    this.metricsIntervalInitial = metricsIntervalInitial ?? 1000;\r\n    this.appName = appName;\r\n    this.url = url instanceof URL ? url : new URL(url);\r\n    this.clientKey = clientKey;\r\n    this.bucket = this.createEmptyBucket();\r\n    this.fetch = fetch;\r\n    this.customHeaders = customHeaders;\r\n    this.environment = currentEnvironment();\r\n  }\r\n\r\n  public start() {\r\n    if (this.disabled) {\r\n      return false;\r\n    }\r\n\r\n    if (\r\n      typeof this.metricsInterval === 'number' &&\r\n      this.metricsInterval > 0\r\n    ) {\r\n      if (this.metricsIntervalInitial && this.metricsIntervalInitial > 0) {\r\n        setTimeout(async () => {\r\n          this.startTimer();\r\n          await this.sendMetrics();\r\n        }, this.metricsIntervalInitial);\r\n      } else {\r\n        this.startTimer();\r\n      }\r\n    }\r\n  }\r\n\r\n  public stop() {\r\n    if (this.timer) {\r\n      clearTimeout(this.timer);\r\n      delete this.timer;\r\n    }\r\n  }\r\n\r\n  public createEmptyBucket(): Bucket {\r\n    return {\r\n      start: new Date(),\r\n      stop: null,\r\n      features: {},\r\n    };\r\n  }\r\n\r\n  private getHeaders() {\r\n    const headers: Record<string, string> = {\r\n      [HEADER_API_KEY]: this.clientKey,\r\n      'Accept': 'application/json',\r\n      'Content-Type': 'application/json',\r\n    };\r\n\r\n    Object.entries(this.customHeaders)\r\n      .filter(notNullOrUndefined)\r\n      .forEach(([name, value]) => (headers[name] = value));\r\n\r\n    return headers;\r\n  }\r\n\r\n  public async sendMetrics(): Promise<void> {\r\n    /* istanbul ignore next if */\r\n\r\n    const url = `${this.url}ab/v1/metric`;\r\n    const payload = this.getPayload();\r\n\r\n    if (this.bucketIsEmpty(payload)) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await this.fetch(url, {\r\n        cache: 'no-cache',\r\n        method: 'POST',\r\n        headers: this.getHeaders(),\r\n        body: JSON.stringify(payload),\r\n      });\r\n      this.onSent(payload);\r\n    } catch (e) {\r\n      console.error('AbFlags: unable to send feature metrics', e);\r\n      this.onError(e);\r\n    }\r\n  }\r\n\r\n  public count(name: string, enabled: boolean): boolean {\r\n    if (this.disabled || !this.bucket) {\r\n      return false;\r\n    }\r\n    this.assertBucket(name);\r\n    this.bucket.features[name][enabled ? 'yes' : 'no']++;\r\n    return true;\r\n  }\r\n\r\n  private assertBucket(name: string) {\r\n    if (this.disabled || !this.bucket) {\r\n      return false;\r\n    }\r\n    if (!this.bucket.features[name]) {\r\n      this.bucket.features[name] = {\r\n        yes: 0,\r\n        no: 0,\r\n      };\r\n    }\r\n  }\r\n\r\n  private startTimer(): void {\r\n    this.timer = setInterval(async () => {\r\n      await this.sendMetrics();\r\n    }, this.metricsInterval);\r\n  }\r\n\r\n  private bucketIsEmpty(payload: Payload) {\r\n    return Object.keys(payload.bucket.features).length === 0;\r\n  }\r\n\r\n  private getPayload(): Payload {\r\n    const bucket = { ...this.bucket, stop: new Date() };\r\n    this.bucket = this.createEmptyBucket();\r\n\r\n    return {\r\n      bucket,\r\n      createdAt: new Date(),\r\n      appName: this.appName,\r\n      instanceId: 'browser',\r\n      os: this.environment.os,\r\n      environment: this.environment.environment,\r\n    };\r\n  }\r\n}\r\n","import {TinyEmitter} from \"tiny-emitter\";\r\nimport {Feature, HEADER_API_KEY, IConfig, LastUpdateTerms, REFRESH_INTERVAL_INIT, SdkState, SESSION_ID} from \"../types\";\r\nimport EventsHandler from \"./events-handler\";\r\nimport {InMemoryStorageProvider, IStorageProvider, LocalStorageProvider} from \"../storage\";\r\nimport {computeContextHashValue, EVENTS, notNullOrUndefined, resolveAbortController, resolveFetch} from \"../utils\";\r\nimport {Metrics} from \"./metrics\";\r\n\r\nexport class AbClient extends TinyEmitter {\r\n  private _config: IConfig;\r\n  private eventsHandler: EventsHandler;\r\n  private readonly url: string;\r\n  private storage: IStorageProvider;\r\n  private state: SdkState;\r\n  private metrics: Metrics;\r\n  private readyEventEmitted = false;\r\n  private readonly storeKey = 'feature';\r\n  private readonly lastUpdateKey = 'last-time';\r\n  private lastRefreshTimestamp: number;\r\n  private features?: Feature[];\r\n  private readonly fetch: any;\r\n  private etag: string = '';\r\n  private abortController?: AbortController | null;\r\n  private lastError: any;\r\n  private fetchedFromServer = false;\r\n  private readonly ready: Promise<void>;\r\n  private started = false;\r\n  private timerRef?: any;\r\n\r\n  constructor(config: IConfig) {\r\n    super();\r\n\r\n    if (!config.clientKey) {\r\n      throw new Error('clientKey is required');\r\n    }\r\n    if (!config.appName) {\r\n      throw new Error('appName is required.');\r\n    }\r\n\r\n    this.eventsHandler = new EventsHandler();\r\n\r\n    this.url = config.url ?? 'https://ab.wolfx.app';\r\n\r\n    // * init storage\r\n    this.storage =\r\n      config.storageProvider ||\r\n      (typeof window !== 'undefined'\r\n        ? new LocalStorageProvider()\r\n        : new InMemoryStorageProvider());\r\n    this.fetch = resolveFetch()\r\n    if (!this.fetch) {\r\n      console.error(\r\n        'You must either provide your own \"fetch\" implementation or run in an environment where \"fetch\" is available.'\r\n      );\r\n    }\r\n\r\n    this._config = config;\r\n    this.ready = new Promise((resolve) => {\r\n      this.init()\r\n        .then(resolve)\r\n        .catch((error) => {\r\n          console.debug(error);\r\n          this.state = 'error';\r\n          this.emit(EVENTS.ERROR, error);\r\n          this.lastError = error;\r\n          resolve();\r\n        });\r\n    });\r\n    this.features = [];\r\n    this.lastRefreshTimestamp = 0;\r\n    this.state = 'initializing';\r\n\r\n    this.metrics = new Metrics({\r\n      onError: this.emit.bind(this, EVENTS.ERROR),\r\n      onSent: this.emit.bind(this, EVENTS.SENT),\r\n      appName: this._config.appName,\r\n      metricsInterval: this._config.metricsInterval,\r\n      disableMetrics: this._config.disableMetrics ?? false,\r\n      url: this.url,\r\n      clientKey: this._config.clientKey,\r\n      fetch: this.fetch,\r\n      customHeaders: this._config.customHeaders,\r\n      metricsIntervalInitial: this._config.metricsIntervalInitial ?? 1000,\r\n    });\r\n  }\r\n\r\n  private async init(): Promise<void> {\r\n    this._config.sessionId = await this.resolveSessionId();\r\n\r\n    this.features = (await this.storage.get(this.storeKey)) || [];\r\n    this.lastRefreshTimestamp = await this.getLastRefreshTimestamp();\r\n\r\n    this.state = 'healthy';\r\n    this.emit(EVENTS.INIT);\r\n  }\r\n\r\n  public async start(): Promise<void> {\r\n    this.started = true;\r\n    if (this.timerRef) {\r\n      console.error(\r\n        'SDK has already started, if you want to restart the SDK you should call client.stop() before starting again.'\r\n      );\r\n      return;\r\n    }\r\n    await this.ready;\r\n    this.metrics.start();\r\n    const interval = this._config.refreshInterval && this._config.refreshInterval > 500 ? this._config.refreshInterval : REFRESH_INTERVAL_INIT;\r\n\r\n    await this.initialFetchFeatures();\r\n\r\n    if (interval > 0) {\r\n      this.timerRef = setInterval(() => this.fetchFeatures(), interval);\r\n    }\r\n  }\r\n\r\n  private async getLastRefreshTimestamp(): Promise<number> {\r\n    const lastRefresh: LastUpdateTerms | undefined =\r\n      await this.storage.get(this.lastUpdateKey);\r\n    const contextHash = await computeContextHashValue({\r\n      appName: this._config.appName,\r\n      sessionId: this._config.sessionId,\r\n      currentTime: this._config.currentTime,\r\n      userId: this._config.userId,\r\n      environment: this._config.environment,\r\n      properties: this._config.properties,\r\n    });\r\n    return lastRefresh?.key === contextHash ? lastRefresh.timestamp : 0;\r\n  }\r\n\r\n  private setReady() {\r\n    this.readyEventEmitted = true;\r\n    this.emit(EVENTS.READY);\r\n  }\r\n\r\n  private async storeLastRefreshTimestamp(): Promise<void> {\r\n    this.lastRefreshTimestamp = Date.now();\r\n\r\n    const contextHash = await computeContextHashValue({\r\n      appName: this._config.appName,\r\n      sessionId: this._config.sessionId,\r\n      currentTime: this._config.currentTime,\r\n      userId: this._config.userId,\r\n      environment: this._config.environment,\r\n      properties: this._config.properties,\r\n    });\r\n    const lastUpdateValue: LastUpdateTerms = {\r\n      key: contextHash,\r\n      timestamp: this.lastRefreshTimestamp,\r\n    };\r\n    await this.storage.save(this.lastUpdateKey, lastUpdateValue);\r\n  }\r\n\r\n  private async resolveSessionId(): Promise<string> {\r\n    let sessionId = await this.storage.get(SESSION_ID);\r\n    if (!sessionId) {\r\n      sessionId = Math.floor(Math.random() * 1_000_000_000);\r\n      await this.storage.save(SESSION_ID, sessionId.toString(10));\r\n    }\r\n    return sessionId.toString(10);\r\n  }\r\n\r\n  private isUpToDate(): boolean {\r\n    const now = Date.now();\r\n\r\n    const ttl = this._config.refreshInterval && this._config.refreshInterval > 500 ? this._config.refreshInterval : REFRESH_INTERVAL_INIT;\r\n\r\n    return (\r\n      this.lastRefreshTimestamp > 0 &&\r\n      this.lastRefreshTimestamp <= now &&\r\n      now - this.lastRefreshTimestamp <= ttl\r\n    );\r\n  }\r\n\r\n  private initialFetchFeatures() {\r\n    if (this.isUpToDate()) {\r\n      if (!this.fetchedFromServer) {\r\n        this.fetchedFromServer = true;\r\n        this.setReady();\r\n      }\r\n      return;\r\n    }\r\n    return this.fetchFeatures();\r\n  }\r\n\r\n  private async fetchFeatures() {\r\n    if (this.fetch) {\r\n      if (this.abortController) {\r\n        this.abortController.abort();\r\n      }\r\n      this.abortController = resolveAbortController();\r\n      const signal = this.abortController\r\n        ? this.abortController.signal\r\n        : undefined;\r\n      try {\r\n        const url = new URL('/ab/v1/feature/frontend', this.url);\r\n        const method = 'GET';\r\n        url.searchParams.set('appName', this._config.appName)\r\n        url.searchParams.set('environment', this._config.environment ?? '')\r\n        url.searchParams.set('userId', this._config.userId ?? '')\r\n        url.searchParams.set('sessionId', this._config.sessionId ?? '')\r\n        url.searchParams.set('currentTime', this._config.currentTime ?? new Date().toString())\r\n        for (let entry of Object.entries(this._config.properties ?? {})) {\r\n          url.searchParams.set(entry[0], entry[1])\r\n        }\r\n\r\n        const response = await this.fetch(url.toString(), {\r\n          method,\r\n          cache: 'no-cache',\r\n          headers: this.getHeaders(),\r\n          signal,\r\n        });\r\n        if (this.state === 'error' && response.status < 400) {\r\n          this.state = 'healthy';\r\n          this.emit(EVENTS.RECOVERED);\r\n        }\r\n\r\n        if (response.ok) {\r\n          this.etag = response.headers.get('ETag') || '';\r\n          const data = await response.json();\r\n\r\n          await this.storeFeatures(data);\r\n\r\n          if (this.state !== 'healthy') {\r\n            this.state = 'healthy';\r\n          }\r\n          if (!this.fetchedFromServer) {\r\n            this.fetchedFromServer = true;\r\n            this.setReady();\r\n          }\r\n          this.storeLastRefreshTimestamp();\r\n        } else if (response.status === 304) {\r\n          this.storeLastRefreshTimestamp();\r\n        } else {\r\n          console.error(\r\n            'AbFlags: Fetching feature toggles did not have an ok response'\r\n          );\r\n          this.state = 'error';\r\n          this.emit(EVENTS.ERROR, {\r\n            type: 'HttpError',\r\n            code: response.status,\r\n          });\r\n\r\n          this.lastError = {\r\n            type: 'HttpError',\r\n            code: response.status,\r\n          };\r\n        }\r\n      } catch (e) {\r\n        if (\r\n          !(\r\n            typeof e === 'object' &&\r\n            e !== null &&\r\n            'name' in e &&\r\n            e.name === 'AbortError'\r\n          )\r\n        ) {\r\n          console.error(\r\n            'AbFlags: unable to fetch feature toggles',\r\n            e\r\n          );\r\n          this.state = 'error';\r\n          this.emit(EVENTS.ERROR, e);\r\n          this.lastError = e;\r\n        }\r\n      } finally {\r\n        this.abortController = null;\r\n      }\r\n    }\r\n  }\r\n\r\n  private async storeFeatures(features: Feature[]): Promise<void> {\r\n    this.features = features;\r\n    this.emit(EVENTS.UPDATE);\r\n    await this.storage.save(this.storeKey, features);\r\n  }\r\n\r\n  private getHeaders() {\r\n    const headers: Record<string, string> = {\r\n      [HEADER_API_KEY]: this._config.clientKey,\r\n      Accept: 'application/json',\r\n    };\r\n    headers['Content-Type'] = 'application/json';\r\n    if (this.etag) {\r\n      headers['If-None-Match'] = this.etag;\r\n    }\r\n    Object.entries(this._config.customHeaders ?? {})\r\n      .filter(notNullOrUndefined)\r\n      .forEach(([name, value]) => (headers[name] = value));\r\n    return headers;\r\n  }\r\n\r\n  isEnabled(key: string) {\r\n    const enabled = !!this.features?.find(f => f.name === key)\r\n\r\n    this.metrics.count(key, enabled);\r\n\r\n    return enabled;\r\n  }\r\n}\r\n","import React, {createContext, useContext, useEffect, useMemo} from \"react\";\nimport {AbClient} from \"@abflags/js-sdk\";\n\ninterface IAbContext {\n  url: string,\n  clientKey: string,\n  appName: string,\n  userId: string,\n  refreshInterval?: number,\n  metricsInterval?: number,\n  disableMetrics: false,\n}\n\nconst AbContext = createContext<IAbContext | undefined>(undefined);\n\nexport const AbProvider = ({children, config}: { config: IAbContext, children: React.ReactNode }) => {\n  const [client, setClient] = React.useState<AbClient>()\n\n  useEffect(() => {\n    setClient(new AbClient({\n      url: config.url,\n      clientKey: config.clientKey,\n      appName: config.appName,\n      userId: config.userId,\n      disableMetrics: config.disableMetrics,\n      metricsInterval: config.metricsInterval,\n      refreshInterval: config.refreshInterval,\n    }))\n  }, [config])\n\n  const contextValue = useMemo(\n    () => ({\n      ...config,\n      client,\n    }),\n    [config, client]\n  );\n\n  return (\n    <>\n      <AbContext.Provider value={contextValue}>{children}</AbContext.Provider>\n    </>\n  );\n};\n\nexport const useAbflags: () => any = () => {\n  return useContext(AbContext);\n};\n"],"names":["AbClient","jsx","E","name","callback","ctx","e","self","listener","data","evtArr","len","evts","liveEvents","i","tinyEmitterModule","TinyEmitter","HEADER_API_KEY","SESSION_ID","REFRESH_INTERVAL_INIT","getRandomValues","rnds8","rng","byteToHex","unsafeStringify","arr","offset","randomUUID","native","v4","options","buf","rnds","EventsHandler","uuidv4","context","enabled","featureName","eventType","impressionData","variant","baseEvent","LocalStorageProvider","repo","key","ex","InMemoryStorageProvider","isBrowser","_a","isNode","_b","platform","isMacOs","_c","_d","isWindows","isLinux","_e","isIos","EVENTS","notNullOrUndefined","value","contextString","sha256","input","cryptoSubtle","msgUint8","hashBuffer","x","computeContextHashValue","obj","resolveFetch","resolveAbortController","currentEnvironment","doNothing","Metrics","onError","onSent","appName","metricsInterval","disableMetrics","url","clientKey","fetch","customHeaders","metricsIntervalInitial","headers","payload","bucket","config","resolve","error","interval","lastRefresh","contextHash","lastUpdateValue","sessionId","now","ttl","signal","method","entry","response","features","f","AbContext","createContext","AbProvider","children","client","setClient","React","useEffect","contextValue","useMemo","Fragment","useAbflags","useContext"],"mappings":";;AAAO,SAASA,KAAW;AACzB,SACG,gBAAAC,EAAA,OAAA,EACC,UAAC,gBAAAA,EAAA,MAAA,EAAG,iCAAoB,CAAA,GAC1B;AAEJ;;ACNA,SAASC,IAAK;AAGd;AAEAA,EAAE,YAAY;AAAA,EACZ,IAAI,SAAUC,GAAMC,GAAUC,GAAK;AACjC,QAAIC,IAAI,KAAK,MAAM,KAAK,IAAI,CAAA;AAE5B,YAACA,EAAEH,CAAI,MAAMG,EAAEH,CAAI,IAAI,CAAA,IAAK,KAAK;AAAA,MAC/B,IAAIC;AAAA,MACJ,KAAKC;AAAA,IACX,CAAK,GAEM;AAAA,EACR;AAAA,EAED,MAAM,SAAUF,GAAMC,GAAUC,GAAK;AACnC,QAAIE,IAAO;AACX,aAASC,IAAY;AACnB,MAAAD,EAAK,IAAIJ,GAAMK,CAAQ,GACvBJ,EAAS,MAAMC,GAAK,SAAS;AAAA,IACnC;AAEI,WAAAG,EAAS,IAAIJ,GACN,KAAK,GAAGD,GAAMK,GAAUH,CAAG;AAAA,EACnC;AAAA,EAED,MAAM,SAAUF,GAAM;AACpB,QAAIM,IAAO,CAAA,EAAG,MAAM,KAAK,WAAW,CAAC,GACjCC,MAAW,KAAK,MAAM,KAAK,IAAI,CAAA,IAAKP,CAAI,KAAK,CAAA,GAAI,MAAO,GACxD,IAAI,GACJQ,IAAMD,EAAO;AAEjB,SAAK,GAAG,IAAIC,GAAK;AACf,MAAAD,EAAO,CAAC,EAAE,GAAG,MAAMA,EAAO,CAAC,EAAE,KAAKD,CAAI;AAGxC,WAAO;AAAA,EACR;AAAA,EAED,KAAK,SAAUN,GAAMC,GAAU;AAC7B,QAAI,IAAI,KAAK,MAAM,KAAK,IAAI,CAAA,IACxBQ,IAAO,EAAET,CAAI,GACbU,IAAa,CAAE;AAEnB,QAAID,KAAQR;AACV,eAASU,IAAI,GAAGH,IAAMC,EAAK,QAAQE,IAAIH,GAAKG;AAC1C,QAAIF,EAAKE,CAAC,EAAE,OAAOV,KAAYQ,EAAKE,CAAC,EAAE,GAAG,MAAMV,KAC9CS,EAAW,KAAKD,EAAKE,CAAC,CAAC;AAQ7B,WAACD,EAAW,SACR,EAAEV,CAAI,IAAIU,IACV,OAAO,EAAEV,CAAI,GAEV;AAAA,EACX;AACA;AAEAY,EAAc,UAAGb;AACjB,IAAAc,KAAAD,EAAA,QAAA,cAA6Bb;AChEtB,MAAMe,IAAiB,WAEjBC,IAAa,cACbC,IAAwB;ACFrC,IAAIC;AACJ,MAAMC,KAAQ,IAAI,WAAW,EAAE;AAChB,SAASC,KAAM;AAE5B,MAAI,CAACF,MAEHA,IAAkB,OAAO,SAAW,OAAe,OAAO,mBAAmB,OAAO,gBAAgB,KAAK,MAAM,GAE3G,CAACA;AACH,UAAM,IAAI,MAAM,0GAA0G;AAI9H,SAAOA,EAAgBC,EAAK;AAC9B;ACXA,MAAME,IAAY,CAAE;AAEpB,SAAST,IAAI,GAAGA,IAAI,KAAK,EAAEA;AACzB,EAAAS,EAAU,MAAMT,IAAI,KAAO,SAAS,EAAE,EAAE,MAAM,CAAC,CAAC;AAG3C,SAASU,GAAgBC,GAAKC,IAAS,GAAG;AAG/C,SAAOH,EAAUE,EAAIC,IAAS,CAAC,CAAC,IAAIH,EAAUE,EAAIC,IAAS,CAAC,CAAC,IAAIH,EAAUE,EAAIC,IAAS,CAAC,CAAC,IAAIH,EAAUE,EAAIC,IAAS,CAAC,CAAC,IAAI,MAAMH,EAAUE,EAAIC,IAAS,CAAC,CAAC,IAAIH,EAAUE,EAAIC,IAAS,CAAC,CAAC,IAAI,MAAMH,EAAUE,EAAIC,IAAS,CAAC,CAAC,IAAIH,EAAUE,EAAIC,IAAS,CAAC,CAAC,IAAI,MAAMH,EAAUE,EAAIC,IAAS,CAAC,CAAC,IAAIH,EAAUE,EAAIC,IAAS,CAAC,CAAC,IAAI,MAAMH,EAAUE,EAAIC,IAAS,EAAE,CAAC,IAAIH,EAAUE,EAAIC,IAAS,EAAE,CAAC,IAAIH,EAAUE,EAAIC,IAAS,EAAE,CAAC,IAAIH,EAAUE,EAAIC,IAAS,EAAE,CAAC,IAAIH,EAAUE,EAAIC,IAAS,EAAE,CAAC,IAAIH,EAAUE,EAAIC,IAAS,EAAE,CAAC;AACnf;AChBA,MAAMC,KAAa,OAAO,SAAW,OAAe,OAAO,cAAc,OAAO,WAAW,KAAK,MAAM,GACvFC,IAAA;AAAA,EACb,YAAAD;AACF;ACCA,SAASE,GAAGC,GAASC,GAAKL,GAAQ;AAChC,MAAIE,EAAO,cAAc,CAACG,KAAO,CAACD;AAChC,WAAOF,EAAO,WAAY;AAG5B,EAAAE,IAAUA,KAAW,CAAE;AACvB,QAAME,IAAOF,EAAQ,WAAWA,EAAQ,OAAOR;AAE/C,SAAAU,EAAK,CAAC,IAAIA,EAAK,CAAC,IAAI,KAAO,IAC3BA,EAAK,CAAC,IAAIA,EAAK,CAAC,IAAI,KAAO,KAYpBR,GAAgBQ,CAAI;AAC7B;ACvBA,MAAMC,GAAc;AAAA,EACR,kBAAkB;AACtB,WAAOC,GAAO;AAAA,EAAA;AAAA,EAGX,sBACHC,GACAC,GACAC,GACAC,GACAC,GACAC,GACF;AACE,UAAMC,IAAY,KAAK;AAAA,MACnBN;AAAA,MACAC;AAAA,MACAC;AAAA,MACAC;AAAA,MACAC;AAAA,IACJ;AAEA,WAAIC,IACO;AAAA,MACH,GAAGC;AAAA,MACH,SAAAD;AAAA,IACJ,IAEGC;AAAA,EAAA;AAAA,EAGH,gBACJN,GACAC,GACAC,GACAC,GACAC,GACF;AACS,WAAA;AAAA,MACH,WAAAD;AAAA,MACA,SAAS,KAAK,gBAAgB;AAAA,MAC9B,SAAAH;AAAA,MACA,SAAAC;AAAA,MACA,aAAAC;AAAA,MACA,gBAAAE;AAAA,IACJ;AAAA,EAAA;AAER;AC/CO,MAAMG,GAAiD;AAAA,EAG5D,YAAYvC,IAAO,YAAY;AAC7B,SAAK,SAASA;AAAA,EAAA;AAAA,EAGhB,MAAa,KAAKA,GAAcM,GAAW;AACnC,UAAAkC,IAAO,KAAK,UAAUlC,CAAI,GAC1BmC,IAAM,GAAG,KAAK,MAAM,IAAIzC,CAAI;AAC9B,QAAA;AACK,aAAA,aAAa,QAAQyC,GAAKD,CAAI;AAAA,aAC9BE,GAAI;AACX,cAAQ,MAAMA,CAAE;AAAA,IAAA;AAAA,EAClB;AAAA,EAGK,IAAI1C,GAAc;AACnB,QAAA;AACF,YAAMyC,IAAM,GAAG,KAAK,MAAM,IAAIzC,CAAI,IAC5BM,IAAO,OAAO,aAAa,QAAQmC,CAAG;AAC5C,aAAOnC,IAAO,KAAK,MAAMA,CAAI,IAAI;AAAA,aAC1B,GAAG;AACV,cAAQ,MAAM,CAAC;AAAA,IAAA;AAAA,EACjB;AAEJ;AC1BO,MAAMqC,GAAoD;AAAA,EAA1D,cAAA;AACG,SAAA,4BAAY,IAAI;AAAA,EAAA;AAAA,EAExB,MAAa,KAAK3C,GAAcM,GAAW;AACpC,SAAA,MAAM,IAAIN,GAAMM,CAAI;AAAA,EAAA;AAAA,EAG3B,MAAa,IAAIN,GAAc;AACtB,WAAA,KAAK,MAAM,IAAIA,CAAI;AAAA,EAAA;AAE9B;;ACVO,MAAM4C,OAAYC,IAAA,WAAW,WAAX,gBAAAA,EAAmB,cAAa;;AAElD,MAAMC,OAASC,KAAAF,IAAA,WAAW,YAAX,gBAAAA,EAAoB,aAApB,gBAAAE,EAA8B,UAAS;;CAExCA,KAAAF,IAAA,WAAW,YAAX,gBAAAA,EAAoB,aAApB,QAAAE,EAA8B;;CAE7BA,KAAAF,IAAA,WAAW,SAAX,gBAAAA,EAAiB,YAAjB,QAAAE,EAA0B;;CAEtBA,KAAAF,IAAA,WAAW,YAAX,gBAAAA,EAAoB,aAApB,QAAAE,EAA8B;;CAEjCA,KAAAF,IAAA,WAAW,cAAX,gBAAAA,EAAsB,cAAtB,QAAAE,EAAiC,SAAS;AAEtC,OAAO,oBAAsB,OAAe,sBAAsB;AAE5D,OAAO,6BAA+B,OAAe,sBAAsB;AAE9E,OAAO,0BAA4B,OAAe,sBAAsB;AAEvE,OAAO,2BAA6B,OAAe,sBAAsB;;AAGxG,MAAMC,KAAWD,KAAAF,IAAA,WAAW,cAAX,gBAAAA,EAAsB,kBAAtB,gBAAAE,EAAqC;;AAE/C,MAAME,KAAUD,MAAa,aAChCH,IAAA,WAAW,cAAX,gBAAAA,EAAsB,cAAa,gBACnCK,KAAAH,IAAA,WAAW,cAAX,gBAAAA,EAAsB,cAAtB,gBAAAG,EAAiC,SAAS,cAAa,QACvDC,IAAA,WAAW,YAAX,gBAAAA,EAAoB,cAAa;;AAE9B,MAAMC,KAAYJ,MAAa,eAClCH,IAAA,WAAW,cAAX,gBAAAA,EAAsB,cAAa,aACnCE,IAAA,WAAW,YAAX,gBAAAA,EAAoB,cAAa;;AAE9B,MAAMM,KAAUL,MAAa,aAChCD,KAAAF,IAAA,WAAW,cAAX,gBAAAA,EAAsB,aAAtB,gBAAAE,EAAgC,WAAW,cAAa,QACxDI,KAAAD,IAAA,WAAW,cAAX,gBAAAA,EAAsB,cAAtB,gBAAAC,EAAiC,SAAS,gBAAe,QACzDG,IAAA,WAAW,YAAX,gBAAAA,EAAoB,cAAa;;AAE9B,MAAMC,KAAQP,MAAa,WAC7BH,IAAA,WAAW,cAAX,gBAAAA,EAAsB,cAAa,gBAAcE,IAAA,WAAW,cAAX,gBAAAA,EAAsB,kBAAiB,KACzF,mBAAmB,MAAKG,IAAA,WAAW,cAAX,gBAAAA,EAAsB,QAAQ;;AAEjCF,MAAa,eAClCH,IAAA,WAAW,cAAX,gBAAAA,EAAsB,cAAa,eACnCK,KAAAH,IAAA,WAAW,cAAX,gBAAAA,EAAsB,cAAtB,gBAAAG,EAAiC,SAAS,kBAAiB,QAC3DC,IAAA,WAAW,YAAX,QAAAA,EAAoB;AC3CjB,MAAMK,IAAS;AAAA,EACpB,MAAM;AAAA,EACN,OAAO;AAAA,EACP,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,YAAY;AAAA,EACZ,MAAM;AAAA,EACN,WAAW;AACb,GAEaC,IAAqB,CAAC,CAAA,EAAGC,CAAK,MAClBA,KAAU,MAEtBC,KAAgB,CAAC3B,MAErB,KAAK,UAAUA,CAAO,GAGzB4B,KAAS,OAAOC,MAAmC;;AACjD,QAAAC,IACJ,OAAO,aAAe,SAAejB,IAAA,WAAW,WAAX,QAAAA,EAAmB,WACpDE,IAAA,WAAW,WAAX,gBAAAA,EAAmB,SACnB;AAGJ,MAAA,OAAO,cAAgB,OACvB,EAACe,KAAA,QAAAA,EAAc,WACf,OAAO,aAAe;AAEhB,UAAA,IAAI,MAAM,gCAAgC;AAGlD,QAAMC,IAAW,IAAI,cAAc,OAAOF,CAAK,GACzCG,IAAa,MAAMF,EAAa,OAAO,WAAWC,CAAQ;AACzD,SAAA,MAAM,KAAK,IAAI,WAAWC,CAAU,CAAC,EACzC,IAAI,CAACC,MAAMA,EAAE,SAAS,EAAE,EAAE,SAAS,GAAG,GAAG,CAAC,EAC1C,KAAK,EAAE;AACZ,GACaC,IAA0B,OAAOC,MAAmB;AACzD,QAAAT,IAAQC,GAAcQ,CAAG;AAE3B,MAAA;AACK,WAAA,MAAMP,GAAOF,CAAK;AAAA,EAAA,QACnB;AACC,WAAAA;AAAA,EAAA;AAEX,GAEaU,KAAe,MAAM;AAC5B,MAAA;AACF,QAAI,OAAO,SAAW,OAAe,WAAW;AACvC,aAAA,MAAM,KAAK,MAAM;AAG1B,QAAI,WAAW;AACN,aAAA,MAAM,KAAK,UAAU;AAAA,WAEvBjE,GAAG;AACF,YAAA,MAAM,qCAAqCA,CAAC;AAAA,EAAA;AAIxD,GAEakE,KAAyB,MAAM;AACtC,MAAA;AACF,QAAI,OAAO,SAAW,OAAe,qBAAqB;AACjD,aAAA,IAAI,OAAO,gBAAgB;AAGpC,QAAI,WAAW;AACN,aAAA,IAAI,WAAW,gBAAgB;AAAA,WAEjClE,GAAG;AACF,YAAA,MAAM,uDAAuDA,CAAC;AAAA,EAAA;AAE1E,GAEamE,KAAwC,OAC5C;AAAA,EACL,IAAIrB,KAAU,WACVG,KAAY,WACVC,KAAU,UACRE,KAAQ,QACN;AAAA,EACV,aAAaX,KACT,YACAE,KACE,YACA;AACR,ICzDIyB,KAAY,MAAM;AAAC;AAElB,MAAMC,GAAQ;AAAA,EAenB,YAAY;AAAA,IACE,SAAAC;AAAA,IACA,QAAAC;AAAA,IACA,SAAAC;AAAA,IACA,iBAAAC;AAAA,IACA,gBAAAC,IAAiB;AAAA,IACjB,KAAAC;AAAA,IACA,WAAAC;AAAA,IACA,OAAAC;AAAA,IACA,eAAAC,KAAgB,CAAC;AAAA,IACjB,wBAAAC;AAAA,EAAA,GACiB;AAC7B,SAAK,UAAUT,GACf,KAAK,SAASC,KAAUH,IACxB,KAAK,WAAWM,GAChB,KAAK,kBAAkBD,KAAoB,KAC3C,KAAK,yBAAyBM,MAA0B,KACxD,KAAK,UAAUP,GACf,KAAK,MAAMG,aAAe,MAAMA,IAAM,IAAI,IAAIA,CAAG,GACjD,KAAK,YAAYC,GACZ,KAAA,SAAS,KAAK,kBAAkB,GACrC,KAAK,QAAQC,GACb,KAAK,gBAAgBC,IACrB,KAAK,cAAcX,GAAmB;AAAA,EAAA;AAAA,EAGjC,QAAQ;AACb,QAAI,KAAK;AACA,aAAA;AAGT,IACE,OAAO,KAAK,mBAAoB,YAChC,KAAK,kBAAkB,MAEnB,KAAK,0BAA0B,KAAK,yBAAyB,IAC/D,WAAW,YAAY;AACrB,WAAK,WAAW,GAChB,MAAM,KAAK,YAAY;AAAA,IAAA,GACtB,KAAK,sBAAsB,IAE9B,KAAK,WAAW;AAAA,EAEpB;AAAA,EAGK,OAAO;AACZ,IAAI,KAAK,UACP,aAAa,KAAK,KAAK,GACvB,OAAO,KAAK;AAAA,EACd;AAAA,EAGK,oBAA4B;AAC1B,WAAA;AAAA,MACL,2BAAW,KAAK;AAAA,MAChB,MAAM;AAAA,MACN,UAAU,CAAA;AAAA,IACZ;AAAA,EAAA;AAAA,EAGM,aAAa;AACnB,UAAMa,IAAkC;AAAA,MACtC,CAACrE,CAAc,GAAG,KAAK;AAAA,MACvB,QAAU;AAAA,MACV,gBAAgB;AAAA,IAClB;AAEA,kBAAO,QAAQ,KAAK,aAAa,EAC9B,OAAO2C,CAAkB,EACzB,QAAQ,CAAC,CAACzD,GAAM0D,CAAK,MAAOyB,EAAQnF,CAAI,IAAI0D,CAAM,GAE9CyB;AAAA,EAAA;AAAA,EAGT,MAAa,cAA6B;AAGlC,UAAAL,IAAM,GAAG,KAAK,GAAG,gBACjBM,IAAU,KAAK,WAAW;AAE5B,QAAA,MAAK,cAAcA,CAAO;AAI1B,UAAA;AACI,cAAA,KAAK,MAAMN,GAAK;AAAA,UACpB,OAAO;AAAA,UACP,QAAQ;AAAA,UACR,SAAS,KAAK,WAAW;AAAA,UACzB,MAAM,KAAK,UAAUM,CAAO;AAAA,QAAA,CAC7B,GACD,KAAK,OAAOA,CAAO;AAAA,eACZjF,GAAG;AACF,gBAAA,MAAM,2CAA2CA,CAAC,GAC1D,KAAK,QAAQA,CAAC;AAAA,MAAA;AAAA,EAChB;AAAA,EAGK,MAAMH,GAAciC,GAA2B;AACpD,WAAI,KAAK,YAAY,CAAC,KAAK,SAClB,MAET,KAAK,aAAajC,CAAI,GACtB,KAAK,OAAO,SAASA,CAAI,EAAEiC,IAAU,QAAQ,IAAI,KAC1C;AAAA,EAAA;AAAA,EAGD,aAAajC,GAAc;AACjC,QAAI,KAAK,YAAY,CAAC,KAAK;AAClB,aAAA;AAET,IAAK,KAAK,OAAO,SAASA,CAAI,MACvB,KAAA,OAAO,SAASA,CAAI,IAAI;AAAA,MAC3B,KAAK;AAAA,MACL,IAAI;AAAA,IACN;AAAA,EACF;AAAA,EAGM,aAAmB;AACpB,SAAA,QAAQ,YAAY,YAAY;AACnC,YAAM,KAAK,YAAY;AAAA,IAAA,GACtB,KAAK,eAAe;AAAA,EAAA;AAAA,EAGjB,cAAcoF,GAAkB;AACtC,WAAO,OAAO,KAAKA,EAAQ,OAAO,QAAQ,EAAE,WAAW;AAAA,EAAA;AAAA,EAGjD,aAAsB;AACtB,UAAAC,IAAS,EAAE,GAAG,KAAK,QAAQ,MAAM,oBAAI,OAAO;AAC7C,gBAAA,SAAS,KAAK,kBAAkB,GAE9B;AAAA,MACL,QAAAA;AAAA,MACA,+BAAe,KAAK;AAAA,MACpB,SAAS,KAAK;AAAA,MACd,YAAY;AAAA,MACZ,IAAI,KAAK,YAAY;AAAA,MACrB,aAAa,KAAK,YAAY;AAAA,IAChC;AAAA,EAAA;AAEJ;AC7LO,MAAMxF,WAAiBgB,GAAY;AAAA,EAqBxC,YAAYyE,GAAiB;AAGvB,QAFE,MAAA,GAfR,KAAQ,oBAAoB,IAC5B,KAAiB,WAAW,WAC5B,KAAiB,gBAAgB,aAIjC,KAAQ,OAAe,IAGvB,KAAQ,oBAAoB,IAE5B,KAAQ,UAAU,IAMZ,CAACA,EAAO;AACJ,YAAA,IAAI,MAAM,uBAAuB;AAErC,QAAA,CAACA,EAAO;AACJ,YAAA,IAAI,MAAM,sBAAsB;AAGnC,SAAA,gBAAgB,IAAIxD,GAAc,GAElC,KAAA,MAAMwD,EAAO,OAAO,wBAGpB,KAAA,UACHA,EAAO,oBACN,OAAO,SAAW,MACf,IAAI/C,GAAA,IACJ,IAAII,OACV,KAAK,QAAQyB,GAAa,GACrB,KAAK,SACA,QAAA;AAAA,MACN;AAAA,IACF,GAGF,KAAK,UAAUkB,GACf,KAAK,QAAQ,IAAI,QAAQ,CAACC,MAAY;AACpC,WAAK,OACF,KAAKA,CAAO,EACZ,MAAM,CAACC,MAAU;AAChB,gBAAQ,MAAMA,CAAK,GACnB,KAAK,QAAQ,SACR,KAAA,KAAKhC,EAAO,OAAOgC,CAAK,GAC7B,KAAK,YAAYA,GACTD,EAAA;AAAA,MAAA,CACT;AAAA,IAAA,CACJ,GACD,KAAK,WAAW,CAAC,GACjB,KAAK,uBAAuB,GAC5B,KAAK,QAAQ,gBAER,KAAA,UAAU,IAAIf,GAAQ;AAAA,MACzB,SAAS,KAAK,KAAK,KAAK,MAAMhB,EAAO,KAAK;AAAA,MAC1C,QAAQ,KAAK,KAAK,KAAK,MAAMA,EAAO,IAAI;AAAA,MACxC,SAAS,KAAK,QAAQ;AAAA,MACtB,iBAAiB,KAAK,QAAQ;AAAA,MAC9B,gBAAgB,KAAK,QAAQ,kBAAkB;AAAA,MAC/C,KAAK,KAAK;AAAA,MACV,WAAW,KAAK,QAAQ;AAAA,MACxB,OAAO,KAAK;AAAA,MACZ,eAAe,KAAK,QAAQ;AAAA,MAC5B,wBAAwB,KAAK,QAAQ,0BAA0B;AAAA,IAAA,CAChE;AAAA,EAAA;AAAA,EAGH,MAAc,OAAsB;AAClC,SAAK,QAAQ,YAAY,MAAM,KAAK,iBAAiB,GAEhD,KAAA,WAAY,MAAM,KAAK,QAAQ,IAAI,KAAK,QAAQ,KAAM,CAAC,GACvD,KAAA,uBAAuB,MAAM,KAAK,wBAAwB,GAE/D,KAAK,QAAQ,WACR,KAAA,KAAKA,EAAO,IAAI;AAAA,EAAA;AAAA,EAGvB,MAAa,QAAuB;AAElC,QADA,KAAK,UAAU,IACX,KAAK,UAAU;AACT,cAAA;AAAA,QACN;AAAA,MACF;AACA;AAAA,IAAA;AAEF,UAAM,KAAK,OACX,KAAK,QAAQ,MAAM;AACb,UAAAiC,IAAW,KAAK,QAAQ,mBAAmB,KAAK,QAAQ,kBAAkB,MAAM,KAAK,QAAQ,kBAAkBzE;AAErH,UAAM,KAAK,qBAAqB,GAE5ByE,IAAW,MACb,KAAK,WAAW,YAAY,MAAM,KAAK,iBAAiBA,CAAQ;AAAA,EAClE;AAAA,EAGF,MAAc,0BAA2C;AACvD,UAAMC,IACJ,MAAM,KAAK,QAAQ,IAAI,KAAK,aAAa,GACrCC,IAAc,MAAMzB,EAAwB;AAAA,MAChD,SAAS,KAAK,QAAQ;AAAA,MACtB,WAAW,KAAK,QAAQ;AAAA,MACxB,aAAa,KAAK,QAAQ;AAAA,MAC1B,QAAQ,KAAK,QAAQ;AAAA,MACrB,aAAa,KAAK,QAAQ;AAAA,MAC1B,YAAY,KAAK,QAAQ;AAAA,IAAA,CAC1B;AACD,YAAOwB,KAAA,gBAAAA,EAAa,SAAQC,IAAcD,EAAY,YAAY;AAAA,EAAA;AAAA,EAG5D,WAAW;AACjB,SAAK,oBAAoB,IACpB,KAAA,KAAKlC,EAAO,KAAK;AAAA,EAAA;AAAA,EAGxB,MAAc,4BAA2C;AAClD,SAAA,uBAAuB,KAAK,IAAI;AAUrC,UAAMoC,IAAmC;AAAA,MACvC,KATkB,MAAM1B,EAAwB;AAAA,QAChD,SAAS,KAAK,QAAQ;AAAA,QACtB,WAAW,KAAK,QAAQ;AAAA,QACxB,aAAa,KAAK,QAAQ;AAAA,QAC1B,QAAQ,KAAK,QAAQ;AAAA,QACrB,aAAa,KAAK,QAAQ;AAAA,QAC1B,YAAY,KAAK,QAAQ;AAAA,MAAA,CAC1B;AAAA,MAGC,WAAW,KAAK;AAAA,IAClB;AACA,UAAM,KAAK,QAAQ,KAAK,KAAK,eAAe0B,CAAe;AAAA,EAAA;AAAA,EAG7D,MAAc,mBAAoC;AAChD,QAAIC,IAAY,MAAM,KAAK,QAAQ,IAAI9E,CAAU;AACjD,WAAK8E,MACHA,IAAY,KAAK,MAAM,KAAK,OAAA,IAAW,GAAa,GACpD,MAAM,KAAK,QAAQ,KAAK9E,GAAY8E,EAAU,SAAS,EAAE,CAAC,IAErDA,EAAU,SAAS,EAAE;AAAA,EAAA;AAAA,EAGtB,aAAsB;AACtB,UAAAC,IAAM,KAAK,IAAI,GAEfC,IAAM,KAAK,QAAQ,mBAAmB,KAAK,QAAQ,kBAAkB,MAAM,KAAK,QAAQ,kBAAkB/E;AAG9G,WAAA,KAAK,uBAAuB,KAC5B,KAAK,wBAAwB8E,KAC7BA,IAAM,KAAK,wBAAwBC;AAAA,EAAA;AAAA,EAI/B,uBAAuB;AACzB,QAAA,KAAK,cAAc;AACjB,MAAC,KAAK,sBACR,KAAK,oBAAoB,IACzB,KAAK,SAAS;AAEhB;AAAA,IAAA;AAEF,WAAO,KAAK,cAAc;AAAA,EAAA;AAAA,EAG5B,MAAc,gBAAgB;AAC5B,QAAI,KAAK,OAAO;AACd,MAAI,KAAK,mBACP,KAAK,gBAAgB,MAAM,GAE7B,KAAK,kBAAkB1B,GAAuB;AAC9C,YAAM2B,IAAS,KAAK,kBAChB,KAAK,gBAAgB,SACrB;AACA,UAAA;AACF,cAAMlB,IAAM,IAAI,IAAI,2BAA2B,KAAK,GAAG,GACjDmB,IAAS;AACf,QAAAnB,EAAI,aAAa,IAAI,WAAW,KAAK,QAAQ,OAAO,GACpDA,EAAI,aAAa,IAAI,eAAe,KAAK,QAAQ,eAAe,EAAE,GAClEA,EAAI,aAAa,IAAI,UAAU,KAAK,QAAQ,UAAU,EAAE,GACxDA,EAAI,aAAa,IAAI,aAAa,KAAK,QAAQ,aAAa,EAAE,GAC1DA,EAAA,aAAa,IAAI,eAAe,KAAK,QAAQ,gBAAmB,oBAAA,KAAO,GAAA,SAAA,CAAU;AAC5E,iBAAAoB,KAAS,OAAO,QAAQ,KAAK,QAAQ,cAAc,CAAA,CAAE;AAC5D,UAAApB,EAAI,aAAa,IAAIoB,EAAM,CAAC,GAAGA,EAAM,CAAC,CAAC;AAGzC,cAAMC,IAAW,MAAM,KAAK,MAAMrB,EAAI,YAAY;AAAA,UAChD,QAAAmB;AAAA,UACA,OAAO;AAAA,UACP,SAAS,KAAK,WAAW;AAAA,UACzB,QAAAD;AAAA,QAAA,CACD;AAMD,YALI,KAAK,UAAU,WAAWG,EAAS,SAAS,QAC9C,KAAK,QAAQ,WACR,KAAA,KAAK3C,EAAO,SAAS,IAGxB2C,EAAS,IAAI;AACf,eAAK,OAAOA,EAAS,QAAQ,IAAI,MAAM,KAAK;AACtC,gBAAA7F,IAAO,MAAM6F,EAAS,KAAK;AAE3B,gBAAA,KAAK,cAAc7F,CAAI,GAEzB,KAAK,UAAU,cACjB,KAAK,QAAQ,YAEV,KAAK,sBACR,KAAK,oBAAoB,IACzB,KAAK,SAAS,IAEhB,KAAK,0BAA0B;AAAA,QAAA,MACjC,CAAW6F,EAAS,WAAW,MAC7B,KAAK,0BAA0B,KAEvB,QAAA;AAAA,UACN;AAAA,QACF,GACA,KAAK,QAAQ,SACR,KAAA,KAAK3C,EAAO,OAAO;AAAA,UACtB,MAAM;AAAA,UACN,MAAM2C,EAAS;AAAA,QAAA,CAChB,GAED,KAAK,YAAY;AAAA,UACf,MAAM;AAAA,UACN,MAAMA,EAAS;AAAA,QACjB;AAAA,eAEK,GAAG;AAER,QACE,OAAO,KAAM,YACb,MAAM,QACN,UAAU,KACV,EAAE,SAAS,iBAGL,QAAA;AAAA,UACN;AAAA,UACA;AAAA,QACF,GACA,KAAK,QAAQ,SACR,KAAA,KAAK3C,EAAO,OAAO,CAAC,GACzB,KAAK,YAAY;AAAA,MACnB,UACA;AACA,aAAK,kBAAkB;AAAA,MAAA;AAAA,IACzB;AAAA,EACF;AAAA,EAGF,MAAc,cAAc4C,GAAoC;AAC9D,SAAK,WAAWA,GACX,KAAA,KAAK5C,EAAO,MAAM,GACvB,MAAM,KAAK,QAAQ,KAAK,KAAK,UAAU4C,CAAQ;AAAA,EAAA;AAAA,EAGzC,aAAa;AACnB,UAAMjB,IAAkC;AAAA,MACtC,CAACrE,CAAc,GAAG,KAAK,QAAQ;AAAA,MAC/B,QAAQ;AAAA,IACV;AACA,WAAAqE,EAAQ,cAAc,IAAI,oBACtB,KAAK,SACCA,EAAA,eAAe,IAAI,KAAK,OAElC,OAAO,QAAQ,KAAK,QAAQ,iBAAiB,CAAA,CAAE,EAC5C,OAAO1B,CAAkB,EACzB,QAAQ,CAAC,CAACzD,GAAM0D,CAAK,MAAOyB,EAAQnF,CAAI,IAAI0D,CAAM,GAC9CyB;AAAA,EAAA;AAAA,EAGT,UAAU1C,GAAa;;AACf,UAAAR,IAAU,CAAC,GAACY,IAAA,KAAK,aAAL,QAAAA,EAAe,KAAK,CAAAwD,MAAKA,EAAE,SAAS5D;AAEjD,gBAAA,QAAQ,MAAMA,GAAKR,CAAO,GAExBA;AAAA,EAAA;AAEX;AC5RA,MAAMqE,IAAYC,GAAsC,MAAS,GAEpDC,KAAa,CAAC,EAAC,UAAAC,GAAU,QAAAnB,QAA+D;AACnG,QAAM,CAACoB,GAAQC,CAAS,IAAIC,GAAM,SAAmB;AAErD,EAAAC,GAAU,MAAM;AACd,IAAAF,EAAU,IAAI9G,GAAS;AAAA,MACrB,KAAKyF,EAAO;AAAA,MACZ,WAAWA,EAAO;AAAA,MAClB,SAASA,EAAO;AAAA,MAChB,QAAQA,EAAO;AAAA,MACf,gBAAgBA,EAAO;AAAA,MACvB,iBAAiBA,EAAO;AAAA,MACxB,iBAAiBA,EAAO;AAAA,IAAA,CACzB,CAAC;AAAA,EAAA,GACD,CAACA,CAAM,CAAC;AAEX,QAAMwB,IAAeC;AAAA,IACnB,OAAO;AAAA,MACL,GAAGzB;AAAA,MACH,QAAAoB;AAAA,IAAA;AAAA,IAEF,CAACpB,GAAQoB,CAAM;AAAA,EACjB;AAGE,SAAA,gBAAA5G,EAAAkH,IAAA,EACE,4BAACV,EAAU,UAAV,EAAmB,OAAOQ,GAAe,UAAAL,GAAS,EACrD,CAAA;AAEJ,GAEaQ,KAAwB,MAC5BC,GAAWZ,CAAS;","x_google_ignoreList":[1,3,4,5,6,10]}